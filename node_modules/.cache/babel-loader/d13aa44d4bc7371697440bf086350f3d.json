{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\settings\\\\ThemeColorPresets.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport merge from 'lodash/merge';\nimport { useMemo } from 'react';\n// @mui\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\n//\nimport { useSettingsContext } from './SettingsContext';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nThemeColorPresets.propTypes = {\n  children: PropTypes.node\n};\nexport default function ThemeColorPresets(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const outerTheme = useTheme();\n  const {\n    presetsColor\n  } = useSettingsContext();\n  const themeOptions = useMemo(() => ({\n    palette: {\n      primary: presetsColor\n    },\n    customShadows: {\n      primary: `0 8px 16px 0 ${alpha(presetsColor.main, 0.24)}`\n    }\n  }), [presetsColor]);\n  const theme = createTheme(merge(outerTheme, themeOptions));\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_s(ThemeColorPresets, \"qFc7dVr8K5R6pokFuL0xvxo8yl4=\", false, function () {\n  return [useTheme, useSettingsContext];\n});\n_c = ThemeColorPresets;\nvar _c;\n$RefreshReg$(_c, \"ThemeColorPresets\");","map":{"version":3,"names":["PropTypes","merge","useMemo","alpha","ThemeProvider","createTheme","useTheme","useSettingsContext","ThemeColorPresets","propTypes","children","node","outerTheme","presetsColor","themeOptions","palette","primary","customShadows","main","theme"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/settings/ThemeColorPresets.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport merge from 'lodash/merge';\r\nimport { useMemo } from 'react';\r\n// @mui\r\nimport { alpha, ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\r\n//\r\nimport { useSettingsContext } from './SettingsContext';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nThemeColorPresets.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function ThemeColorPresets({ children }) {\r\n  const outerTheme = useTheme();\r\n\r\n  const { presetsColor } = useSettingsContext();\r\n\r\n  const themeOptions = useMemo(\r\n    () => ({\r\n      palette: {\r\n        primary: presetsColor,\r\n      },\r\n      customShadows: {\r\n        primary: `0 8px 16px 0 ${alpha(presetsColor.main, 0.24)}`,\r\n      },\r\n    }),\r\n    [presetsColor]\r\n  );\r\n\r\n  const theme = createTheme(merge(outerTheme, themeOptions));\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,cAAc;AAChC,SAASC,OAAO,QAAQ,OAAO;AAC/B;AACA,SAASC,KAAK,EAAEC,aAAa,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,sBAAsB;AAClF;AACA,SAASC,kBAAkB,QAAQ,mBAAmB;;AAEtD;AAAA;AAEAC,iBAAiB,CAACC,SAAS,GAAG;EAC5BC,QAAQ,EAAEV,SAAS,CAACW;AACtB,CAAC;AAED,eAAe,SAASH,iBAAiB,OAAe;EAAA;EAAA,IAAd;IAAEE;EAAS,CAAC;EACpD,MAAME,UAAU,GAAGN,QAAQ,EAAE;EAE7B,MAAM;IAAEO;EAAa,CAAC,GAAGN,kBAAkB,EAAE;EAE7C,MAAMO,YAAY,GAAGZ,OAAO,CAC1B,OAAO;IACLa,OAAO,EAAE;MACPC,OAAO,EAAEH;IACX,CAAC;IACDI,aAAa,EAAE;MACbD,OAAO,EAAG,gBAAeb,KAAK,CAACU,YAAY,CAACK,IAAI,EAAE,IAAI,CAAE;IAC1D;EACF,CAAC,CAAC,EACF,CAACL,YAAY,CAAC,CACf;EAED,MAAMM,KAAK,GAAGd,WAAW,CAACJ,KAAK,CAACW,UAAU,EAAEE,YAAY,CAAC,CAAC;EAE1D,oBAAO,QAAC,aAAa;IAAC,KAAK,EAAEK,KAAM;IAAA,UAAET;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAiB;AAChE;AAAC,GApBuBF,iBAAiB;EAAA,QACpBF,QAAQ,EAEFC,kBAAkB;AAAA;AAAA,KAHrBC,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}