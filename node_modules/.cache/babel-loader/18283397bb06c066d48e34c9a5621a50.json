{"ast":null,"code":"// routes\nimport { PATH_AUTH } from '../routes/paths';\n// utils\nimport axios from '../utils/axios';\n\n// ----------------------------------------------------------------------\n\nfunction jwtDecode(token) {\n  const base64Url = token.split('.')[1];\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(c => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`).join(''));\n  return JSON.parse(jsonPayload);\n}\n\n// ----------------------------------------------------------------------\n\nexport const isValidToken = accessToken => {\n  if (!accessToken) {\n    return false;\n  }\n  const decoded = jwtDecode(accessToken);\n  const currentTime = Date.now() / 1000;\n  return decoded.exp > currentTime;\n};\n\n// ----------------------------------------------------------------------\n\nexport const tokenExpired = exp => {\n  // eslint-disable-next-line prefer-const\n  let expiredTimer;\n  const currentTime = Date.now();\n\n  // Test token expires after 10s\n  // const timeLeft = currentTime + 10000 - currentTime; // ~10s\n  const timeLeft = exp * 1000 - currentTime;\n  clearTimeout(expiredTimer);\n  expiredTimer = setTimeout(() => {\n    alert('Token expired');\n    localStorage.removeItem('accessToken');\n    window.location.href = PATH_AUTH.login;\n  }, timeLeft);\n};\n\n// ----------------------------------------------------------------------\n\nexport const setSession = accessToken => {\n  if (accessToken) {\n    localStorage.setItem('accessToken', accessToken);\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n\n    // This function below will handle when token is expired\n    const {\n      exp\n    } = jwtDecode(accessToken); // ~3 days by minimals server\n    tokenExpired(exp);\n  } else {\n    localStorage.removeItem('accessToken');\n    delete axios.defaults.headers.common.Authorization;\n  }\n};","map":{"version":3,"names":["PATH_AUTH","axios","jwtDecode","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","isValidToken","accessToken","decoded","currentTime","Date","now","exp","tokenExpired","expiredTimer","timeLeft","clearTimeout","setTimeout","alert","localStorage","removeItem","location","href","login","setSession","setItem","defaults","headers","common","Authorization"],"sources":["C:/Users/pypho/Desktop/hogProject/src/auth/utils.js"],"sourcesContent":["// routes\r\nimport { PATH_AUTH } from '../routes/paths';\r\n// utils\r\nimport axios from '../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction jwtDecode(token) {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = decodeURIComponent(\r\n    window\r\n      .atob(base64)\r\n      .split('')\r\n      .map((c) => `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`)\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const isValidToken = (accessToken) => {\r\n  if (!accessToken) {\r\n    return false;\r\n  }\r\n\r\n  const decoded = jwtDecode(accessToken);\r\n\r\n  const currentTime = Date.now() / 1000;\r\n\r\n  return decoded.exp > currentTime;\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const tokenExpired = (exp) => {\r\n  // eslint-disable-next-line prefer-const\r\n  let expiredTimer;\r\n\r\n  const currentTime = Date.now();\r\n\r\n  // Test token expires after 10s\r\n  // const timeLeft = currentTime + 10000 - currentTime; // ~10s\r\n  const timeLeft = exp * 1000 - currentTime;\r\n\r\n  clearTimeout(expiredTimer);\r\n\r\n  expiredTimer = setTimeout(() => {\r\n    alert('Token expired');\r\n\r\n    localStorage.removeItem('accessToken');\r\n\r\n    window.location.href = PATH_AUTH.login;\r\n  }, timeLeft);\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const setSession = (accessToken) => {\r\n  if (accessToken) {\r\n    localStorage.setItem('accessToken', accessToken);\r\n\r\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n\r\n    // This function below will handle when token is expired\r\n    const { exp } = jwtDecode(accessToken); // ~3 days by minimals server\r\n    tokenExpired(exp);\r\n  } else {\r\n    localStorage.removeItem('accessToken');\r\n\r\n    delete axios.defaults.headers.common.Authorization;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C;AACA,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;;AAEA,SAASC,SAAS,CAACC,KAAK,EAAE;EACxB,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,MAAM,CACHC,IAAI,CAACL,MAAM,CAAC,CACZD,KAAK,CAAC,EAAE,CAAC,CACTO,GAAG,CAAEC,CAAC,IAAM,IAAI,KAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAE,EAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,EAAC,CAAC,CAC/DC,IAAI,CAAC,EAAE,CAAC,CACZ;EAED,OAAOC,IAAI,CAACC,KAAK,CAACX,WAAW,CAAC;AAChC;;AAEA;;AAEA,OAAO,MAAMY,YAAY,GAAIC,WAAW,IAAK;EAC3C,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,KAAK;EACd;EAEA,MAAMC,OAAO,GAAGpB,SAAS,CAACmB,WAAW,CAAC;EAEtC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI;EAErC,OAAOH,OAAO,CAACI,GAAG,GAAGH,WAAW;AAClC,CAAC;;AAED;;AAEA,OAAO,MAAMI,YAAY,GAAID,GAAG,IAAK;EACnC;EACA,IAAIE,YAAY;EAEhB,MAAML,WAAW,GAAGC,IAAI,CAACC,GAAG,EAAE;;EAE9B;EACA;EACA,MAAMI,QAAQ,GAAGH,GAAG,GAAG,IAAI,GAAGH,WAAW;EAEzCO,YAAY,CAACF,YAAY,CAAC;EAE1BA,YAAY,GAAGG,UAAU,CAAC,MAAM;IAC9BC,KAAK,CAAC,eAAe,CAAC;IAEtBC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IAEtCxB,MAAM,CAACyB,QAAQ,CAACC,IAAI,GAAGpC,SAAS,CAACqC,KAAK;EACxC,CAAC,EAAER,QAAQ,CAAC;AACd,CAAC;;AAED;;AAEA,OAAO,MAAMS,UAAU,GAAIjB,WAAW,IAAK;EACzC,IAAIA,WAAW,EAAE;IACfY,YAAY,CAACM,OAAO,CAAC,aAAa,EAAElB,WAAW,CAAC;IAEhDpB,KAAK,CAACuC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAI,UAAStB,WAAY,EAAC;;IAErE;IACA,MAAM;MAAEK;IAAI,CAAC,GAAGxB,SAAS,CAACmB,WAAW,CAAC,CAAC,CAAC;IACxCM,YAAY,CAACD,GAAG,CAAC;EACnB,CAAC,MAAM;IACLO,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IAEtC,OAAOjC,KAAK,CAACuC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa;EACpD;AACF,CAAC"},"metadata":{},"sourceType":"module"}