{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\hook-form\\\\RHFSwitch.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Switch, FormControlLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFSwitch.propTypes = {\n  name: PropTypes.string\n};\nexport default function RHFSwitch(_ref) {\n  _s();\n  let {\n    name,\n    ...other\n  } = _ref;\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    control: control,\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          ...field,\n          checked: field.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 57\n        }, this),\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(RHFSwitch, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n_c = RHFSwitch;\nvar _c;\n$RefreshReg$(_c, \"RHFSwitch\");","map":{"version":3,"names":["PropTypes","useFormContext","Controller","Switch","FormControlLabel","RHFSwitch","propTypes","name","string","other","control","field","value"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/hook-form/RHFSwitch.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { Switch, FormControlLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFSwitch.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default function RHFSwitch({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => <FormControlLabel control={<Switch {...field} checked={field.value} />} {...other} />}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,SAASC,cAAc,EAAEC,UAAU,QAAQ,iBAAiB;AAC5D;AACA,SAASC,MAAM,EAAEC,gBAAgB,QAAQ,eAAe;;AAExD;AAAA;AAEAC,SAAS,CAACC,SAAS,GAAG;EACpBC,IAAI,EAAEP,SAAS,CAACQ;AAClB,CAAC;AAED,eAAe,SAASH,SAAS,OAAqB;EAAA;EAAA,IAApB;IAAEE,IAAI;IAAE,GAAGE;EAAM,CAAC;EAClD,MAAM;IAAEC;EAAQ,CAAC,GAAGT,cAAc,EAAE;EAEpC,oBACE,QAAC,UAAU;IACT,IAAI,EAAEM,IAAK;IACX,OAAO,EAAEG,OAAQ;IACjB,MAAM,EAAE;MAAA,IAAC;QAAEC;MAAM,CAAC;MAAA,oBAAK,QAAC,gBAAgB;QAAC,OAAO,eAAE,QAAC,MAAM;UAAA,GAAKA,KAAK;UAAE,OAAO,EAAEA,KAAK,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI;QAAA,GAAKH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;EAAC;IAAA;IAAA;IAAA;EAAA,QAC7G;AAEN;AAAC,GAVuBJ,SAAS;EAAA,QACXJ,cAAc;AAAA;AAAA,KADZI,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}