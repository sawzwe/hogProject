{"ast":null,"code":"import { isCssVar } from './utils/css-var.es.js';\nimport { getStyleName } from './utils/get-style-name.es.js';\nimport { transformDefinitions } from './utils/transforms.es.js';\nconst style = {\n  get: (element, name) => {\n    name = getStyleName(name);\n    let value = isCssVar(name) ? element.style.getPropertyValue(name) : getComputedStyle(element)[name];\n    if (!value && value !== 0) {\n      const definition = transformDefinitions.get(name);\n      if (definition) value = definition.initialValue;\n    }\n    return value;\n  },\n  set: (element, name, value) => {\n    name = getStyleName(name);\n    if (isCssVar(name)) {\n      element.style.setProperty(name, value);\n    } else {\n      element.style[name] = value;\n    }\n  }\n};\nexport { style };","map":null,"metadata":{},"sourceType":"module"}