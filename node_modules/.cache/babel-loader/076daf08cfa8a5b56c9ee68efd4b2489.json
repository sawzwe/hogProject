{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\settings\\\\drawer\\\\ColorPresetsOptions.js\",\n  _s = $RefreshSig$();\n// @mui\nimport { alpha } from '@mui/material/styles';\nimport { RadioGroup } from '@mui/material';\n//\nimport { useSettingsContext } from '../SettingsContext';\nimport { StyledCard, StyledWrap, MaskControl, StyledCircleColor } from '../styles';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColorPresetsOptions() {\n  _s();\n  const {\n    themeColorPresets,\n    onChangeColorPresets,\n    presetsOption\n  } = useSettingsContext();\n  return /*#__PURE__*/_jsxDEV(RadioGroup, {\n    name: \"themeColorPresets\",\n    value: themeColorPresets,\n    onChange: onChangeColorPresets,\n    children: /*#__PURE__*/_jsxDEV(StyledWrap, {\n      sx: {\n        gridTemplateColumns: 'repeat(3, 1fr)'\n      },\n      children: presetsOption.map(color => {\n        const {\n          name,\n          value\n        } = color;\n        const selected = themeColorPresets === name;\n        return /*#__PURE__*/_jsxDEV(StyledCard, {\n          selected: selected,\n          sx: {\n            height: 48,\n            ...(selected && {\n              bgcolor: alpha(value, 0.08),\n              borderColor: alpha(value, 0.24)\n            })\n          },\n          children: [/*#__PURE__*/_jsxDEV(StyledCircleColor, {\n            selected: selected,\n            color: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MaskControl, {\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorPresetsOptions, \"lDHnH6KNbFH2AWE0gg+J+OIK6yo=\", false, function () {\n  return [useSettingsContext];\n});\n_c = ColorPresetsOptions;\nvar _c;\n$RefreshReg$(_c, \"ColorPresetsOptions\");","map":{"version":3,"names":["alpha","RadioGroup","useSettingsContext","StyledCard","StyledWrap","MaskControl","StyledCircleColor","ColorPresetsOptions","themeColorPresets","onChangeColorPresets","presetsOption","gridTemplateColumns","map","color","name","value","selected","height","bgcolor","borderColor"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/settings/drawer/ColorPresetsOptions.js"],"sourcesContent":["// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport { RadioGroup } from '@mui/material';\r\n//\r\nimport { useSettingsContext } from '../SettingsContext';\r\nimport { StyledCard, StyledWrap, MaskControl, StyledCircleColor } from '../styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ColorPresetsOptions() {\r\n  const { themeColorPresets, onChangeColorPresets, presetsOption } = useSettingsContext();\r\n\r\n  return (\r\n    <RadioGroup name=\"themeColorPresets\" value={themeColorPresets} onChange={onChangeColorPresets}>\r\n      <StyledWrap sx={{ gridTemplateColumns: 'repeat(3, 1fr)' }}>\r\n        {presetsOption.map((color) => {\r\n          const { name, value } = color;\r\n\r\n          const selected = themeColorPresets === name;\r\n\r\n          return (\r\n            <StyledCard\r\n              key={name}\r\n              selected={selected}\r\n              sx={{\r\n                height: 48,\r\n                ...(selected && {\r\n                  bgcolor: alpha(value, 0.08),\r\n                  borderColor: alpha(value, 0.24),\r\n                }),\r\n              }}\r\n            >\r\n              <StyledCircleColor selected={selected} color={value} />\r\n\r\n              <MaskControl value={name} />\r\n            </StyledCard>\r\n          );\r\n        })}\r\n      </StyledWrap>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAC1C;AACA,SAASC,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,iBAAiB,QAAQ,WAAW;;AAElF;AAAA;AAEA,eAAe,SAASC,mBAAmB,GAAG;EAAA;EAC5C,MAAM;IAAEC,iBAAiB;IAAEC,oBAAoB;IAAEC;EAAc,CAAC,GAAGR,kBAAkB,EAAE;EAEvF,oBACE,QAAC,UAAU;IAAC,IAAI,EAAC,mBAAmB;IAAC,KAAK,EAAEM,iBAAkB;IAAC,QAAQ,EAAEC,oBAAqB;IAAA,uBAC5F,QAAC,UAAU;MAAC,EAAE,EAAE;QAAEE,mBAAmB,EAAE;MAAiB,CAAE;MAAA,UACvDD,aAAa,CAACE,GAAG,CAAEC,KAAK,IAAK;QAC5B,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAGF,KAAK;QAE7B,MAAMG,QAAQ,GAAGR,iBAAiB,KAAKM,IAAI;QAE3C,oBACE,QAAC,UAAU;UAET,QAAQ,EAAEE,QAAS;UACnB,EAAE,EAAE;YACFC,MAAM,EAAE,EAAE;YACV,IAAID,QAAQ,IAAI;cACdE,OAAO,EAAElB,KAAK,CAACe,KAAK,EAAE,IAAI,CAAC;cAC3BI,WAAW,EAAEnB,KAAK,CAACe,KAAK,EAAE,IAAI;YAChC,CAAC;UACH,CAAE;UAAA,wBAEF,QAAC,iBAAiB;YAAC,QAAQ,EAAEC,QAAS;YAAC,KAAK,EAAED;UAAM;YAAA;YAAA;YAAA;UAAA,QAAG,eAEvD,QAAC,WAAW;YAAC,KAAK,EAAED;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA,GAZvBA,IAAI;UAAA;UAAA;UAAA;QAAA,QAaE;MAEjB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QACF;AAEjB;AAAC,GAhCuBP,mBAAmB;EAAA,QAC0BL,kBAAkB;AAAA;AAAA,KAD/DK,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}