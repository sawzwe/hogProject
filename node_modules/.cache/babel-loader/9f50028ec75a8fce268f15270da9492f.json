{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\sections\\\\auth\\\\AuthRegisterForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// auth\nimport { useAuthContext } from '../../auth/useAuthContext';\n// components\nimport Iconify from '../../components/iconify';\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthRegisterForm() {\n  _s();\n  const {\n    register\n  } = useAuthContext();\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n    firstName: Yup.string().required('First name is required'),\n    lastName: Yup.string().required('Last name is required')\n  });\n  const defaultValues = {\n    email: 'demo@minimals.cc',\n    password: 'demo1234'\n  };\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues\n  });\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting,\n      isSubmitSuccessful\n    }\n  } = methods;\n  const onSubmit = async data => {\n    try {\n      await register(data.email, data.password, data.firstName, data.lastName);\n    } catch (error) {\n      console.error(error.message);\n      reset();\n      setError('afterSubmit', {\n        ...error,\n        message: error.message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2.5,\n      children: [!!errors.afterSubmit && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: errors.afterSubmit.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: {\n          xs: 'column',\n          sm: 'row'\n        },\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n          name: \"firstName\",\n          label: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n          name: \"lastName\",\n          label: \"Last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n        name: \"email\",\n        label: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n        name: \"password\",\n        label: \"Password\",\n        type: showPassword ? 'text' : 'password',\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setShowPassword(!showPassword),\n              edge: \"end\",\n              children: /*#__PURE__*/_jsxDEV(Iconify, {\n                icon: showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        color: \"inherit\",\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitSuccessful || isSubmitting,\n        sx: {\n          bgcolor: 'text.primary',\n          color: theme => theme.palette.mode === 'light' ? 'common.white' : 'grey.800',\n          '&:hover': {\n            bgcolor: 'text.primary',\n            color: theme => theme.palette.mode === 'light' ? 'common.white' : 'grey.800'\n          }\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthRegisterForm, \"+V26ohmzCNBxjww3Asxem5h6Q3c=\", false, function () {\n  return [useAuthContext, useForm];\n});\n_c = AuthRegisterForm;\nvar _c;\n$RefreshReg$(_c, \"AuthRegisterForm\");","map":{"version":3,"names":["useState","Yup","useForm","yupResolver","Link","Stack","Alert","IconButton","InputAdornment","LoadingButton","useAuthContext","Iconify","FormProvider","RHFTextField","AuthRegisterForm","register","showPassword","setShowPassword","RegisterSchema","object","shape","email","string","required","password","firstName","lastName","defaultValues","methods","resolver","reset","setError","handleSubmit","formState","errors","isSubmitting","isSubmitSuccessful","onSubmit","data","error","console","message","afterSubmit","xs","sm","endAdornment","bgcolor","color","theme","palette","mode"],"sources":["C:/Users/pypho/Desktop/hogProject/src/sections/auth/AuthRegisterForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport * as Yup from 'yup';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Link, Stack, Alert, IconButton, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// auth\r\nimport { useAuthContext } from '../../auth/useAuthContext';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthRegisterForm() {\r\n    const { register } = useAuthContext();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const RegisterSchema = Yup.object().shape({\r\n        email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n        password: Yup.string().required('Password is required'),\r\n        firstName: Yup.string().required('First name is required'),\r\n        lastName: Yup.string().required('Last name is required')\r\n    });\r\n\r\n    const defaultValues = {\r\n        email: 'demo@minimals.cc',\r\n        password: 'demo1234',\r\n    };\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(RegisterSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors, isSubmitting, isSubmitSuccessful },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            await register(data.email, data.password, data.firstName, data.lastName);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            reset();\r\n            setError('afterSubmit', {\r\n                ...error,\r\n                message: error.message\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            <Stack spacing={2.5}>\r\n                {!!errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>}\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                    <RHFTextField name=\"firstName\" label=\"First name\" />\r\n                    <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n                </Stack>\r\n\r\n                <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n                <RHFTextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n\r\n            <LoadingButton\r\n                fullWidth\r\n                color=\"inherit\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={isSubmitSuccessful || isSubmitting}\r\n                sx={{\r\n                    bgcolor: 'text.primary',\r\n                    color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\r\n                    '&:hover': {\r\n                        bgcolor: 'text.primary',\r\n                        color: (theme) => (theme.palette.mode === 'light' ? 'common.white' : 'grey.800'),\r\n                    },\r\n                }}\r\n            >\r\n                Register\r\n            </LoadingButton>\r\n            </Stack>\r\n        </FormProvider>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}