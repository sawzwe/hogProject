{"ast":null,"code":"import { alpha } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['primary', 'secondary', 'info', 'success', 'warning', 'error'];\nexport default function Progress(theme) {\n  const rootStyle = ownerState => {\n    const bufferVariant = ownerState.variant === 'buffer';\n    const defaultStyle = {\n      borderRadius: 4,\n      '& .MuiLinearProgress-bar': {\n        borderRadius: 4\n      },\n      ...(bufferVariant && {\n        backgroundColor: 'transparent'\n      })\n    };\n    const colorStyle = COLORS.map(color => ({\n      ...(ownerState.color === color && {\n        backgroundColor: alpha(theme.palette[color].main, 0.24)\n      })\n    }));\n    return [...colorStyle, defaultStyle];\n  };\n  return {\n    MuiLinearProgress: {\n      styleOverrides: {\n        root: _ref => {\n          let {\n            ownerState\n          } = _ref;\n          return rootStyle(ownerState);\n        }\n      }\n    }\n  };\n}\n_c = Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["alpha","COLORS","Progress","theme","rootStyle","ownerState","bufferVariant","variant","defaultStyle","borderRadius","backgroundColor","colorStyle","map","color","palette","main","MuiLinearProgress","styleOverrides","root"],"sources":["C:/Users/pypho/Desktop/hogProject/src/theme/overrides/Progress.js"],"sourcesContent":["import { alpha } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLORS = ['primary', 'secondary', 'info', 'success', 'warning', 'error'];\r\n\r\nexport default function Progress(theme) {\r\n  const rootStyle = (ownerState) => {\r\n    const bufferVariant = ownerState.variant === 'buffer';\r\n\r\n    const defaultStyle = {\r\n      borderRadius: 4,\r\n      '& .MuiLinearProgress-bar': {\r\n        borderRadius: 4,\r\n      },\r\n      ...(bufferVariant && {\r\n        backgroundColor: 'transparent',\r\n      }),\r\n    };\r\n\r\n    const colorStyle = COLORS.map((color) => ({\r\n      ...(ownerState.color === color && {\r\n        backgroundColor: alpha(theme.palette[color].main, 0.24),\r\n      }),\r\n    }));\r\n\r\n    return [...colorStyle, defaultStyle];\r\n  };\r\n\r\n  return {\r\n    MuiLinearProgress: {\r\n      styleOverrides: {\r\n        root: ({ ownerState }) => rootStyle(ownerState),\r\n      },\r\n    },\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,eAAe;;AAErC;;AAEA,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;AAE9E,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EACtC,MAAMC,SAAS,GAAIC,UAAU,IAAK;IAChC,MAAMC,aAAa,GAAGD,UAAU,CAACE,OAAO,KAAK,QAAQ;IAErD,MAAMC,YAAY,GAAG;MACnBC,YAAY,EAAE,CAAC;MACf,0BAA0B,EAAE;QAC1BA,YAAY,EAAE;MAChB,CAAC;MACD,IAAIH,aAAa,IAAI;QACnBI,eAAe,EAAE;MACnB,CAAC;IACH,CAAC;IAED,MAAMC,UAAU,GAAGV,MAAM,CAACW,GAAG,CAAEC,KAAK,KAAM;MACxC,IAAIR,UAAU,CAACQ,KAAK,KAAKA,KAAK,IAAI;QAChCH,eAAe,EAAEV,KAAK,CAACG,KAAK,CAACW,OAAO,CAACD,KAAK,CAAC,CAACE,IAAI,EAAE,IAAI;MACxD,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,GAAGJ,UAAU,EAAEH,YAAY,CAAC;EACtC,CAAC;EAED,OAAO;IACLQ,iBAAiB,EAAE;MACjBC,cAAc,EAAE;QACdC,IAAI,EAAE;UAAA,IAAC;YAAEb;UAAW,CAAC;UAAA,OAAKD,SAAS,CAACC,UAAU,CAAC;QAAA;MACjD;IACF;EACF,CAAC;AACH;AAAC,KA9BuBH,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}