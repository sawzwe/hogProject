{"ast":null,"code":"/*!\n * CSSJanus. https://github.com/cssjanus/cssjanus\n *\n * Copyright 2014 Trevor Parscal\n * Copyright 2010 Roan Kattouw\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar cssjanus;\n\n/**\n * Create a tokenizer object.\n *\n * This utility class is used by CSSJanus to protect strings by replacing them temporarily with\n * tokens and later transforming them back.\n *\n * @class\n * @constructor\n * @param {RegExp} regex Regular expression whose matches to replace by a token\n * @param {string} token Placeholder text\n */\nfunction Tokenizer(regex, token) {\n  var matches = [],\n    index = 0;\n\n  /**\n   * Add a match.\n   *\n   * @private\n   * @param {string} match Matched string\n   * @return {string} Token to leave in the matched string's place\n   */\n  function tokenizeCallback(match) {\n    matches.push(match);\n    return token;\n  }\n\n  /**\n   * Get a match.\n   *\n   * @private\n   * @return {string} Original matched string to restore\n   */\n  function detokenizeCallback() {\n    return matches[index++];\n  }\n  return {\n    /**\n     * Replace matching strings with tokens.\n     *\n     * @param {string} str String to tokenize\n     * @return {string} Tokenized string\n     */\n    tokenize: function (str) {\n      return str.replace(regex, tokenizeCallback);\n    },\n    /**\n     * Restores tokens to their original values.\n     *\n     * @param {string} str String previously run through tokenize()\n     * @return {string} Original string\n     */\n    detokenize: function (str) {\n      return str.replace(new RegExp('(' + token + ')', 'g'), detokenizeCallback);\n    }\n  };\n}\n\n/**\n * Create a CSSJanus object.\n *\n * CSSJanus transforms CSS rules with horizontal relevance so that a left-to-right stylesheet can\n * become a right-to-left stylesheet automatically. Processing can be bypassed for an entire rule\n * or a single property by adding a / * @noflip * / comment above the rule or property.\n *\n * @class\n * @constructor\n */\nfunction CSSJanus() {\n  var\n    // Tokens\n    temporaryToken = '`TMP`',\n    noFlipSingleToken = '`NOFLIP_SINGLE`',\n    noFlipClassToken = '`NOFLIP_CLASS`',\n    commentToken = '`COMMENT`',\n    // Patterns\n    nonAsciiPattern = '[^\\\\u0020-\\\\u007e]',\n    unicodePattern = '(?:(?:\\\\\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)',\n    numPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)',\n    unitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)',\n    directionPattern = 'direction\\\\s*:\\\\s*',\n    urlSpecialCharsPattern = '[!#$%&*-~]',\n    validAfterUriCharsPattern = '[\\'\"]?\\\\s*',\n    nonLetterPattern = '(^|[^a-zA-Z])',\n    charsWithinSelectorPattern = '[^\\\\}]*?',\n    noFlipPattern = '\\\\/\\\\*\\\\!?\\\\s*@noflip\\\\s*\\\\*\\\\/',\n    commentPattern = '\\\\/\\\\*[^*]*\\\\*+([^\\\\/*][^*]*\\\\*+)*\\\\/',\n    escapePattern = '(?:' + unicodePattern + '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])',\n    nmstartPattern = '(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')',\n    nmcharPattern = '(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')',\n    identPattern = '-?' + nmstartPattern + nmcharPattern + '*',\n    quantPattern = numPattern + '(?:\\\\s*' + unitPattern + '|' + identPattern + ')?',\n    signedQuantPattern = '((?:-?' + quantPattern + ')|(?:inherit|auto))',\n    fourNotationQuantPropsPattern = '((?:margin|padding|border-width)\\\\s*:\\\\s*)',\n    fourNotationColorPropsPattern = '((?:-color|border-style)\\\\s*:\\\\s*)',\n    colorPattern = '(#?' + nmcharPattern + '+|(?:rgba?|hsla?)\\\\([ \\\\d.,%-]+\\\\))',\n    // The use of a lazy match (\"*?\") may cause a backtrack limit to be exceeded before finding\n    // the intended match. This affects 'urlCharsPattern' and 'lookAheadNotOpenBracePattern'.\n    // We have not yet found this problem on Node.js, but we have on PHP 7, where it was\n    // mitigated by using a possessive quantifier (\"*+\"), which are not supported in JS.\n    // See <https://github.com/cssjanus/php-cssjanus/issues/14> and <https://phabricator.wikimedia.org/T215746#4944830>.\n    urlCharsPattern = '(?:' + urlSpecialCharsPattern + '|' + nonAsciiPattern + '|' + escapePattern + ')*?',\n    lookAheadNotLetterPattern = '(?![a-zA-Z])',\n    lookAheadNotOpenBracePattern = '(?!(' + nmcharPattern + '|\\\\r?\\\\n|\\\\s|#|\\\\:|\\\\.|\\\\,|\\\\+|>|~|\\\\(|\\\\)|\\\\[|\\\\]|=|\\\\*=|~=|\\\\^=|\\'[^\\']*\\'|\"[^\"]*\"|' + commentToken + ')*?{)',\n    lookAheadNotClosingParenPattern = '(?!' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n    lookAheadForClosingParenPattern = '(?=' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n    suffixPattern = '(\\\\s*(?:!important\\\\s*)?[;}])',\n    // Regular expressions\n    temporaryTokenRegExp = /`TMP`/g,\n    commentRegExp = new RegExp(commentPattern, 'gi'),\n    noFlipSingleRegExp = new RegExp('(' + noFlipPattern + lookAheadNotOpenBracePattern + '[^;}]+;?)', 'gi'),\n    noFlipClassRegExp = new RegExp('(' + noFlipPattern + charsWithinSelectorPattern + '})', 'gi'),\n    directionLtrRegExp = new RegExp('(' + directionPattern + ')ltr', 'gi'),\n    directionRtlRegExp = new RegExp('(' + directionPattern + ')rtl', 'gi'),\n    leftRegExp = new RegExp(nonLetterPattern + '(left)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi'),\n    rightRegExp = new RegExp(nonLetterPattern + '(right)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi'),\n    leftInUrlRegExp = new RegExp(nonLetterPattern + '(left)' + lookAheadForClosingParenPattern, 'gi'),\n    rightInUrlRegExp = new RegExp(nonLetterPattern + '(right)' + lookAheadForClosingParenPattern, 'gi'),\n    ltrInUrlRegExp = new RegExp(nonLetterPattern + '(ltr)' + lookAheadForClosingParenPattern, 'gi'),\n    rtlInUrlRegExp = new RegExp(nonLetterPattern + '(rtl)' + lookAheadForClosingParenPattern, 'gi'),\n    cursorEastRegExp = new RegExp(nonLetterPattern + '([ns]?)e-resize', 'gi'),\n    cursorWestRegExp = new RegExp(nonLetterPattern + '([ns]?)w-resize', 'gi'),\n    fourNotationQuantRegExp = new RegExp(fourNotationQuantPropsPattern + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + suffixPattern, 'gi'),\n    fourNotationColorRegExp = new RegExp(fourNotationColorPropsPattern + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + suffixPattern, 'gi'),\n    bgHorizontalPercentageRegExp = new RegExp('(background(?:-position)?\\\\s*:\\\\s*(?:[^:;}\\\\s]+\\\\s+)*?)(' + quantPattern + ')', 'gi'),\n    bgHorizontalPercentageXRegExp = new RegExp('(background-position-x\\\\s*:\\\\s*)(-?' + numPattern + '%)', 'gi'),\n    // border-radius: <length or percentage>{1,4} [optional: / <length or percentage>{1,4} ]\n    borderRadiusRegExp = new RegExp('(border-radius\\\\s*:\\\\s*)' + signedQuantPattern + '(?:(?:\\\\s+' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + '(?:(?:(?:\\\\s*\\\\/\\\\s*)' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + suffixPattern, 'gi'),\n    boxShadowRegExp = new RegExp('(box-shadow\\\\s*:\\\\s*(?:inset\\\\s*)?)' + signedQuantPattern, 'gi'),\n    textShadow1RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern + '(\\\\s*)' + colorPattern, 'gi'),\n    textShadow2RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + colorPattern + '(\\\\s*)' + signedQuantPattern, 'gi'),\n    textShadow3RegExp = new RegExp('(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern, 'gi'),\n    translateXRegExp = new RegExp('(transform\\\\s*:[^;}]*)(translateX\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '(\\\\s*\\\\))', 'gi'),\n    translateRegExp = new RegExp('(transform\\\\s*:[^;}]*)(translate\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '((?:\\\\s*,\\\\s*' + signedQuantPattern + '){0,2}\\\\s*\\\\))', 'gi');\n\n  /**\n   * Invert the horizontal value of a background position property.\n   *\n   * @private\n   * @param {string} match Matched property\n   * @param {string} pre Text before value\n   * @param {string} value Horizontal value\n   * @return {string} Inverted property\n   */\n  function calculateNewBackgroundPosition(match, pre, value) {\n    var idx, len;\n    if (value.slice(-1) === '%') {\n      idx = value.indexOf('.');\n      if (idx !== -1) {\n        // Two off, one for the \"%\" at the end, one for the dot itself\n        len = value.length - idx - 2;\n        value = 100 - parseFloat(value);\n        value = value.toFixed(len) + '%';\n      } else {\n        value = 100 - parseFloat(value) + '%';\n      }\n    }\n    return pre + value;\n  }\n\n  /**\n   * Invert a set of border radius values.\n   *\n   * @private\n   * @param {Array} values Matched values\n   * @return {string} Inverted values\n   */\n  function flipBorderRadiusValues(values) {\n    switch (values.length) {\n      case 4:\n        values = [values[1], values[0], values[3], values[2]];\n        break;\n      case 3:\n        values = [values[1], values[0], values[1], values[2]];\n        break;\n      case 2:\n        values = [values[1], values[0]];\n        break;\n      case 1:\n        values = [values[0]];\n        break;\n    }\n    return values.join(' ');\n  }\n\n  /**\n   * Invert a set of border radius values.\n   *\n   * @private\n   * @param {string} match Matched property\n   * @param {string} pre Text before value\n   * @param {string} [firstGroup1]\n   * @param {string} [firstGroup2]\n   * @param {string} [firstGroup3]\n   * @param {string} [firstGroup4]\n   * @param {string} [secondGroup1]\n   * @param {string} [secondGroup2]\n   * @param {string} [secondGroup3]\n   * @param {string} [secondGroup4]\n   * @param {string} [post] Text after value\n   * @return {string} Inverted property\n   */\n  function calculateNewBorderRadius(match, pre) {\n    var values,\n      args = [].slice.call(arguments),\n      firstGroup = args.slice(2, 6).filter(function (val) {\n        return val;\n      }),\n      secondGroup = args.slice(6, 10).filter(function (val) {\n        return val;\n      }),\n      post = args[10] || '';\n    if (secondGroup.length) {\n      values = flipBorderRadiusValues(firstGroup) + ' / ' + flipBorderRadiusValues(secondGroup);\n    } else {\n      values = flipBorderRadiusValues(firstGroup);\n    }\n    return pre + values + post;\n  }\n\n  /**\n   * Flip the sign of a CSS value, possibly with a unit.\n   *\n   * We can't just negate the value with unary minus due to the units.\n   *\n   * @private\n   * @param {string} value\n   * @return {string}\n   */\n  function flipSign(value) {\n    if (parseFloat(value) === 0) {\n      // Don't mangle zeroes\n      return value;\n    }\n    if (value[0] === '-') {\n      return value.slice(1);\n    }\n    return '-' + value;\n  }\n\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} offset\n   * @return {string}\n   */\n  function calculateNewShadow(match, property, offset) {\n    return property + flipSign(offset);\n  }\n\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} prefix\n   * @param {string} offset\n   * @param {string} suffix\n   * @return {string}\n   */\n  function calculateNewTranslate(match, property, prefix, offset, suffix) {\n    return property + prefix + flipSign(offset) + suffix;\n  }\n\n  /**\n   * @private\n   * @param {string} match\n   * @param {string} property\n   * @param {string} color\n   * @param {string} space\n   * @param {string} offset\n   * @return {string}\n   */\n  function calculateNewFourTextShadow(match, property, color, space, offset) {\n    return property + color + space + flipSign(offset);\n  }\n  return {\n    /**\n     * Transform a left-to-right stylesheet to right-to-left.\n     *\n     * @param {string} css Stylesheet to transform\n     * @param {Object} options Options\n     * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n     * (e.g. 'ltr', 'rtl')\n     * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n     * (e.g. 'left', 'right')\n     * @return {string} Transformed stylesheet\n     */\n    'transform': function (css, options) {\n      // eslint-disable-line quote-props\n      // Use single quotes in this object literal key for closure compiler.\n      // Tokenizers\n      var noFlipSingleTokenizer = new Tokenizer(noFlipSingleRegExp, noFlipSingleToken),\n        noFlipClassTokenizer = new Tokenizer(noFlipClassRegExp, noFlipClassToken),\n        commentTokenizer = new Tokenizer(commentRegExp, commentToken);\n\n      // Tokenize\n      css = commentTokenizer.tokenize(noFlipClassTokenizer.tokenize(noFlipSingleTokenizer.tokenize(\n      // We wrap tokens in ` , not ~ like the original implementation does.\n      // This was done because ` is not a legal character in CSS and can only\n      // occur in URLs, where we escape it to %60 before inserting our tokens.\n      css.replace('`', '%60'))));\n\n      // Transform URLs\n      if (options.transformDirInUrl) {\n        // Replace 'ltr' with 'rtl' and vice versa in background URLs\n        css = css.replace(ltrInUrlRegExp, '$1' + temporaryToken).replace(rtlInUrlRegExp, '$1ltr').replace(temporaryTokenRegExp, 'rtl');\n      }\n      if (options.transformEdgeInUrl) {\n        // Replace 'left' with 'right' and vice versa in background URLs\n        css = css.replace(leftInUrlRegExp, '$1' + temporaryToken).replace(rightInUrlRegExp, '$1left').replace(temporaryTokenRegExp, 'right');\n      }\n\n      // Transform rules\n      css = css\n      // Replace direction: ltr; with direction: rtl; and vice versa.\n      .replace(directionLtrRegExp, '$1' + temporaryToken).replace(directionRtlRegExp, '$1ltr').replace(temporaryTokenRegExp, 'rtl')\n      // Flip rules like left: , padding-right: , etc.\n      .replace(leftRegExp, '$1' + temporaryToken).replace(rightRegExp, '$1left').replace(temporaryTokenRegExp, 'right')\n      // Flip East and West in rules like cursor: nw-resize;\n      .replace(cursorEastRegExp, '$1$2' + temporaryToken).replace(cursorWestRegExp, '$1$2e-resize').replace(temporaryTokenRegExp, 'w-resize')\n      // Border radius\n      .replace(borderRadiusRegExp, calculateNewBorderRadius)\n      // Shadows\n      .replace(boxShadowRegExp, calculateNewShadow).replace(textShadow1RegExp, calculateNewFourTextShadow).replace(textShadow2RegExp, calculateNewFourTextShadow).replace(textShadow3RegExp, calculateNewShadow)\n      // Translate\n      .replace(translateXRegExp, calculateNewTranslate).replace(translateRegExp, calculateNewTranslate)\n      // Swap the second and fourth parts in four-part notation rules\n      // like padding: 1px 2px 3px 4px;\n      .replace(fourNotationQuantRegExp, '$1$2$3$8$5$6$7$4$9').replace(fourNotationColorRegExp, '$1$2$3$8$5$6$7$4$9')\n      // Flip horizontal background percentages\n      .replace(bgHorizontalPercentageRegExp, calculateNewBackgroundPosition).replace(bgHorizontalPercentageXRegExp, calculateNewBackgroundPosition);\n\n      // Detokenize\n      css = noFlipSingleTokenizer.detokenize(noFlipClassTokenizer.detokenize(commentTokenizer.detokenize(css)));\n      return css;\n    }\n  };\n}\n\n/* Initialization */\n\ncssjanus = new CSSJanus();\n\n/* Exports */\n\nif (typeof module !== 'undefined' && module.exports) {\n  /**\n   * Transform a left-to-right stylesheet to right-to-left.\n   *\n   * This function is a static wrapper around the transform method of an instance of CSSJanus.\n   *\n   * @param {string} css Stylesheet to transform\n   * @param {Object|boolean} [options] Options object, or transformDirInUrl option (back-compat)\n   * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n   * (e.g. 'ltr', 'rtl')\n   * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n   * (e.g. 'left', 'right')\n   * @param {boolean} [transformEdgeInUrl] Back-compat parameter\n   * @return {string} Transformed stylesheet\n   */\n  exports.transform = function (css, options, transformEdgeInUrl) {\n    var norm;\n    if (typeof options === 'object') {\n      norm = options;\n    } else {\n      norm = {};\n      if (typeof options === 'boolean') {\n        norm.transformDirInUrl = options;\n      }\n      if (typeof transformEdgeInUrl === 'boolean') {\n        norm.transformEdgeInUrl = transformEdgeInUrl;\n      }\n    }\n    return cssjanus.transform(css, norm);\n  };\n} else if (typeof window !== 'undefined') {\n  /* global window */\n  // Allow cssjanus to be used in a browser.\n  // eslint-disable-next-line dot-notation\n  window['cssjanus'] = cssjanus;\n}","map":{"version":3,"names":["cssjanus","Tokenizer","regex","token","matches","index","tokenizeCallback","match","push","detokenizeCallback","tokenize","str","replace","detokenize","RegExp","CSSJanus","temporaryToken","noFlipSingleToken","noFlipClassToken","commentToken","nonAsciiPattern","unicodePattern","numPattern","unitPattern","directionPattern","urlSpecialCharsPattern","validAfterUriCharsPattern","nonLetterPattern","charsWithinSelectorPattern","noFlipPattern","commentPattern","escapePattern","nmstartPattern","nmcharPattern","identPattern","quantPattern","signedQuantPattern","fourNotationQuantPropsPattern","fourNotationColorPropsPattern","colorPattern","urlCharsPattern","lookAheadNotLetterPattern","lookAheadNotOpenBracePattern","lookAheadNotClosingParenPattern","lookAheadForClosingParenPattern","suffixPattern","temporaryTokenRegExp","commentRegExp","noFlipSingleRegExp","noFlipClassRegExp","directionLtrRegExp","directionRtlRegExp","leftRegExp","rightRegExp","leftInUrlRegExp","rightInUrlRegExp","ltrInUrlRegExp","rtlInUrlRegExp","cursorEastRegExp","cursorWestRegExp","fourNotationQuantRegExp","fourNotationColorRegExp","bgHorizontalPercentageRegExp","bgHorizontalPercentageXRegExp","borderRadiusRegExp","boxShadowRegExp","textShadow1RegExp","textShadow2RegExp","textShadow3RegExp","translateXRegExp","translateRegExp","calculateNewBackgroundPosition","pre","value","idx","len","slice","indexOf","length","parseFloat","toFixed","flipBorderRadiusValues","values","join","calculateNewBorderRadius","args","call","arguments","firstGroup","filter","val","secondGroup","post","flipSign","calculateNewShadow","property","offset","calculateNewTranslate","prefix","suffix","calculateNewFourTextShadow","color","space","css","options","noFlipSingleTokenizer","noFlipClassTokenizer","commentTokenizer","transformDirInUrl","transformEdgeInUrl","module","exports","transform","norm","window"],"sources":["C:/Users/pypho/Desktop/hogProject/node_modules/cssjanus/src/cssjanus.js"],"sourcesContent":["/*!\n * CSSJanus. https://github.com/cssjanus/cssjanus\n *\n * Copyright 2014 Trevor Parscal\n * Copyright 2010 Roan Kattouw\n * Copyright 2008 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar cssjanus;\n\n/**\n * Create a tokenizer object.\n *\n * This utility class is used by CSSJanus to protect strings by replacing them temporarily with\n * tokens and later transforming them back.\n *\n * @class\n * @constructor\n * @param {RegExp} regex Regular expression whose matches to replace by a token\n * @param {string} token Placeholder text\n */\nfunction Tokenizer( regex, token ) {\n\n\tvar matches = [],\n\t\tindex = 0;\n\n\t/**\n\t * Add a match.\n\t *\n\t * @private\n\t * @param {string} match Matched string\n\t * @return {string} Token to leave in the matched string's place\n\t */\n\tfunction tokenizeCallback( match ) {\n\t\tmatches.push( match );\n\t\treturn token;\n\t}\n\n\t/**\n\t * Get a match.\n\t *\n\t * @private\n\t * @return {string} Original matched string to restore\n\t */\n\tfunction detokenizeCallback() {\n\t\treturn matches[ index++ ];\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Replace matching strings with tokens.\n\t\t *\n\t\t * @param {string} str String to tokenize\n\t\t * @return {string} Tokenized string\n\t\t */\n\t\ttokenize: function ( str ) {\n\t\t\treturn str.replace( regex, tokenizeCallback );\n\t\t},\n\n\t\t/**\n\t\t * Restores tokens to their original values.\n\t\t *\n\t\t * @param {string} str String previously run through tokenize()\n\t\t * @return {string} Original string\n\t\t */\n\t\tdetokenize: function ( str ) {\n\t\t\treturn str.replace( new RegExp( '(' + token + ')', 'g' ), detokenizeCallback );\n\t\t}\n\t};\n}\n\n/**\n * Create a CSSJanus object.\n *\n * CSSJanus transforms CSS rules with horizontal relevance so that a left-to-right stylesheet can\n * become a right-to-left stylesheet automatically. Processing can be bypassed for an entire rule\n * or a single property by adding a / * @noflip * / comment above the rule or property.\n *\n * @class\n * @constructor\n */\nfunction CSSJanus() {\n\n\tvar\n\t\t// Tokens\n\t\ttemporaryToken = '`TMP`',\n\t\tnoFlipSingleToken = '`NOFLIP_SINGLE`',\n\t\tnoFlipClassToken = '`NOFLIP_CLASS`',\n\t\tcommentToken = '`COMMENT`',\n\t\t// Patterns\n\t\tnonAsciiPattern = '[^\\\\u0020-\\\\u007e]',\n\t\tunicodePattern = '(?:(?:\\\\\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)',\n\t\tnumPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)',\n\t\tunitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)',\n\t\tdirectionPattern = 'direction\\\\s*:\\\\s*',\n\t\turlSpecialCharsPattern = '[!#$%&*-~]',\n\t\tvalidAfterUriCharsPattern = '[\\'\"]?\\\\s*',\n\t\tnonLetterPattern = '(^|[^a-zA-Z])',\n\t\tcharsWithinSelectorPattern = '[^\\\\}]*?',\n\t\tnoFlipPattern = '\\\\/\\\\*\\\\!?\\\\s*@noflip\\\\s*\\\\*\\\\/',\n\t\tcommentPattern = '\\\\/\\\\*[^*]*\\\\*+([^\\\\/*][^*]*\\\\*+)*\\\\/',\n\t\tescapePattern = '(?:' + unicodePattern + '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])',\n\t\tnmstartPattern = '(?:[_a-z]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tnmcharPattern = '(?:[_a-z0-9-]|' + nonAsciiPattern + '|' + escapePattern + ')',\n\t\tidentPattern = '-?' + nmstartPattern + nmcharPattern + '*',\n\t\tquantPattern = numPattern + '(?:\\\\s*' + unitPattern + '|' + identPattern + ')?',\n\t\tsignedQuantPattern = '((?:-?' + quantPattern + ')|(?:inherit|auto))',\n\t\tfourNotationQuantPropsPattern = '((?:margin|padding|border-width)\\\\s*:\\\\s*)',\n\t\tfourNotationColorPropsPattern = '((?:-color|border-style)\\\\s*:\\\\s*)',\n\t\tcolorPattern = '(#?' + nmcharPattern + '+|(?:rgba?|hsla?)\\\\([ \\\\d.,%-]+\\\\))',\n\t\t// The use of a lazy match (\"*?\") may cause a backtrack limit to be exceeded before finding\n\t\t// the intended match. This affects 'urlCharsPattern' and 'lookAheadNotOpenBracePattern'.\n\t\t// We have not yet found this problem on Node.js, but we have on PHP 7, where it was\n\t\t// mitigated by using a possessive quantifier (\"*+\"), which are not supported in JS.\n\t\t// See <https://github.com/cssjanus/php-cssjanus/issues/14> and <https://phabricator.wikimedia.org/T215746#4944830>.\n\t\turlCharsPattern = '(?:' + urlSpecialCharsPattern + '|' + nonAsciiPattern + '|' + escapePattern + ')*?',\n\t\tlookAheadNotLetterPattern = '(?![a-zA-Z])',\n\t\tlookAheadNotOpenBracePattern = '(?!(' + nmcharPattern + '|\\\\r?\\\\n|\\\\s|#|\\\\:|\\\\.|\\\\,|\\\\+|>|~|\\\\(|\\\\)|\\\\[|\\\\]|=|\\\\*=|~=|\\\\^=|\\'[^\\']*\\'|\"[^\"]*\"|' + commentToken + ')*?{)',\n\t\tlookAheadNotClosingParenPattern = '(?!' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tlookAheadForClosingParenPattern = '(?=' + urlCharsPattern + validAfterUriCharsPattern + '\\\\))',\n\t\tsuffixPattern = '(\\\\s*(?:!important\\\\s*)?[;}])',\n\t\t// Regular expressions\n\t\ttemporaryTokenRegExp = /`TMP`/g,\n\t\tcommentRegExp = new RegExp( commentPattern, 'gi' ),\n\t\tnoFlipSingleRegExp = new RegExp( '(' + noFlipPattern + lookAheadNotOpenBracePattern + '[^;}]+;?)', 'gi' ),\n\t\tnoFlipClassRegExp = new RegExp( '(' + noFlipPattern + charsWithinSelectorPattern + '})', 'gi' ),\n\t\tdirectionLtrRegExp = new RegExp( '(' + directionPattern + ')ltr', 'gi' ),\n\t\tdirectionRtlRegExp = new RegExp( '(' + directionPattern + ')rtl', 'gi' ),\n\t\tleftRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\trightRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadNotLetterPattern + lookAheadNotClosingParenPattern + lookAheadNotOpenBracePattern, 'gi' ),\n\t\tleftInUrlRegExp = new RegExp( nonLetterPattern + '(left)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trightInUrlRegExp = new RegExp( nonLetterPattern + '(right)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tltrInUrlRegExp = new RegExp( nonLetterPattern + '(ltr)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\trtlInUrlRegExp = new RegExp( nonLetterPattern + '(rtl)' + lookAheadForClosingParenPattern, 'gi' ),\n\t\tcursorEastRegExp = new RegExp( nonLetterPattern + '([ns]?)e-resize', 'gi' ),\n\t\tcursorWestRegExp = new RegExp( nonLetterPattern + '([ns]?)w-resize', 'gi' ),\n\t\tfourNotationQuantRegExp = new RegExp( fourNotationQuantPropsPattern + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + '(\\\\s+)' + signedQuantPattern + suffixPattern, 'gi' ),\n\t\tfourNotationColorRegExp = new RegExp( fourNotationColorPropsPattern + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + '(\\\\s+)' + colorPattern + suffixPattern, 'gi' ),\n\t\tbgHorizontalPercentageRegExp = new RegExp( '(background(?:-position)?\\\\s*:\\\\s*(?:[^:;}\\\\s]+\\\\s+)*?)(' + quantPattern + ')', 'gi' ),\n\t\tbgHorizontalPercentageXRegExp = new RegExp( '(background-position-x\\\\s*:\\\\s*)(-?' + numPattern + '%)', 'gi' ),\n\t\t// border-radius: <length or percentage>{1,4} [optional: / <length or percentage>{1,4} ]\n\t\tborderRadiusRegExp = new RegExp( '(border-radius\\\\s*:\\\\s*)' + signedQuantPattern + '(?:(?:\\\\s+' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' +\n\t\t\t'(?:(?:(?:\\\\s*\\\\/\\\\s*)' + signedQuantPattern + ')(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?(?:\\\\s+' + signedQuantPattern + ')?)?' + suffixPattern, 'gi' ),\n\t\tboxShadowRegExp = new RegExp( '(box-shadow\\\\s*:\\\\s*(?:inset\\\\s*)?)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow1RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern + '(\\\\s*)' + colorPattern, 'gi' ),\n\t\ttextShadow2RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + colorPattern + '(\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttextShadow3RegExp = new RegExp( '(text-shadow\\\\s*:\\\\s*)' + signedQuantPattern, 'gi' ),\n\t\ttranslateXRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translateX\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '(\\\\s*\\\\))', 'gi' ),\n\t\ttranslateRegExp = new RegExp( '(transform\\\\s*:[^;}]*)(translate\\\\s*\\\\(\\\\s*)' + signedQuantPattern + '((?:\\\\s*,\\\\s*' + signedQuantPattern + '){0,2}\\\\s*\\\\))', 'gi' );\n\n\t/**\n\t * Invert the horizontal value of a background position property.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} value Horizontal value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBackgroundPosition( match, pre, value ) {\n\t\tvar idx, len;\n\t\tif ( value.slice( -1 ) === '%' ) {\n\t\t\tidx = value.indexOf( '.' );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\t// Two off, one for the \"%\" at the end, one for the dot itself\n\t\t\t\tlen = value.length - idx - 2;\n\t\t\t\tvalue = 100 - parseFloat( value );\n\t\t\t\tvalue = value.toFixed( len ) + '%';\n\t\t\t} else {\n\t\t\t\tvalue = 100 - parseFloat( value ) + '%';\n\t\t\t}\n\t\t}\n\t\treturn pre + value;\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {Array} values Matched values\n\t * @return {string} Inverted values\n\t */\n\tfunction flipBorderRadiusValues( values ) {\n\t\tswitch ( values.length ) {\n\t\t\tcase 4:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 3 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ], values[ 1 ], values[ 2 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvalues = [ values[ 1 ], values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tvalues = [ values[ 0 ] ];\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn values.join( ' ' );\n\t}\n\n\t/**\n\t * Invert a set of border radius values.\n\t *\n\t * @private\n\t * @param {string} match Matched property\n\t * @param {string} pre Text before value\n\t * @param {string} [firstGroup1]\n\t * @param {string} [firstGroup2]\n\t * @param {string} [firstGroup3]\n\t * @param {string} [firstGroup4]\n\t * @param {string} [secondGroup1]\n\t * @param {string} [secondGroup2]\n\t * @param {string} [secondGroup3]\n\t * @param {string} [secondGroup4]\n\t * @param {string} [post] Text after value\n\t * @return {string} Inverted property\n\t */\n\tfunction calculateNewBorderRadius( match, pre ) {\n\t\tvar values,\n\t\t\targs = [].slice.call( arguments ),\n\t\t\tfirstGroup = args.slice( 2, 6 ).filter( function ( val ) { return val; } ),\n\t\t\tsecondGroup = args.slice( 6, 10 ).filter( function ( val ) { return val; } ),\n\t\t\tpost = args[ 10 ] || '';\n\n\t\tif ( secondGroup.length ) {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup ) + ' / ' + flipBorderRadiusValues( secondGroup );\n\t\t} else {\n\t\t\tvalues = flipBorderRadiusValues( firstGroup );\n\t\t}\n\n\t\treturn pre + values + post;\n\t}\n\n\t/**\n\t * Flip the sign of a CSS value, possibly with a unit.\n\t *\n\t * We can't just negate the value with unary minus due to the units.\n\t *\n\t * @private\n\t * @param {string} value\n\t * @return {string}\n\t */\n\tfunction flipSign( value ) {\n\t\tif ( parseFloat( value ) === 0 ) {\n\t\t\t// Don't mangle zeroes\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( value[ 0 ] === '-' ) {\n\t\t\treturn value.slice( 1 );\n\t\t}\n\n\t\treturn '-' + value;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewShadow( match, property, offset ) {\n\t\treturn property + flipSign( offset );\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} prefix\n\t * @param {string} offset\n\t * @param {string} suffix\n\t * @return {string}\n\t */\n\tfunction calculateNewTranslate( match, property, prefix, offset, suffix ) {\n\t\treturn property + prefix + flipSign( offset ) + suffix;\n\t}\n\n\t/**\n\t * @private\n\t * @param {string} match\n\t * @param {string} property\n\t * @param {string} color\n\t * @param {string} space\n\t * @param {string} offset\n\t * @return {string}\n\t */\n\tfunction calculateNewFourTextShadow( match, property, color, space, offset ) {\n\t\treturn property + color + space + flipSign( offset );\n\t}\n\n\treturn {\n\t\t/**\n\t\t * Transform a left-to-right stylesheet to right-to-left.\n\t\t *\n\t\t * @param {string} css Stylesheet to transform\n\t\t * @param {Object} options Options\n\t\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t\t * (e.g. 'ltr', 'rtl')\n\t\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t\t * (e.g. 'left', 'right')\n\t\t * @return {string} Transformed stylesheet\n\t\t */\n\t\t'transform': function ( css, options ) { // eslint-disable-line quote-props\n\t\t\t// Use single quotes in this object literal key for closure compiler.\n\t\t\t// Tokenizers\n\t\t\tvar noFlipSingleTokenizer = new Tokenizer( noFlipSingleRegExp, noFlipSingleToken ),\n\t\t\t\tnoFlipClassTokenizer = new Tokenizer( noFlipClassRegExp, noFlipClassToken ),\n\t\t\t\tcommentTokenizer = new Tokenizer( commentRegExp, commentToken );\n\n\t\t\t// Tokenize\n\t\t\tcss = commentTokenizer.tokenize(\n\t\t\t\tnoFlipClassTokenizer.tokenize(\n\t\t\t\t\tnoFlipSingleTokenizer.tokenize(\n\t\t\t\t\t\t// We wrap tokens in ` , not ~ like the original implementation does.\n\t\t\t\t\t\t// This was done because ` is not a legal character in CSS and can only\n\t\t\t\t\t\t// occur in URLs, where we escape it to %60 before inserting our tokens.\n\t\t\t\t\t\tcss.replace( '`', '%60' )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t// Transform URLs\n\t\t\tif ( options.transformDirInUrl ) {\n\t\t\t\t// Replace 'ltr' with 'rtl' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( ltrInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rtlInUrlRegExp, '$1ltr' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' );\n\t\t\t}\n\t\t\tif ( options.transformEdgeInUrl ) {\n\t\t\t\t// Replace 'left' with 'right' and vice versa in background URLs\n\t\t\t\tcss = css\n\t\t\t\t\t.replace( leftInUrlRegExp, '$1' + temporaryToken )\n\t\t\t\t\t.replace( rightInUrlRegExp, '$1left' )\n\t\t\t\t\t.replace( temporaryTokenRegExp, 'right' );\n\t\t\t}\n\n\t\t\t// Transform rules\n\t\t\tcss = css\n\t\t\t\t// Replace direction: ltr; with direction: rtl; and vice versa.\n\t\t\t\t.replace( directionLtrRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( directionRtlRegExp, '$1ltr' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'rtl' )\n\t\t\t\t// Flip rules like left: , padding-right: , etc.\n\t\t\t\t.replace( leftRegExp, '$1' + temporaryToken )\n\t\t\t\t.replace( rightRegExp, '$1left' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'right' )\n\t\t\t\t// Flip East and West in rules like cursor: nw-resize;\n\t\t\t\t.replace( cursorEastRegExp, '$1$2' + temporaryToken )\n\t\t\t\t.replace( cursorWestRegExp, '$1$2e-resize' )\n\t\t\t\t.replace( temporaryTokenRegExp, 'w-resize' )\n\t\t\t\t// Border radius\n\t\t\t\t.replace( borderRadiusRegExp, calculateNewBorderRadius )\n\t\t\t\t// Shadows\n\t\t\t\t.replace( boxShadowRegExp, calculateNewShadow )\n\t\t\t\t.replace( textShadow1RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow2RegExp, calculateNewFourTextShadow )\n\t\t\t\t.replace( textShadow3RegExp, calculateNewShadow )\n\t\t\t\t// Translate\n\t\t\t\t.replace( translateXRegExp, calculateNewTranslate )\n\t\t\t\t.replace( translateRegExp, calculateNewTranslate )\n\t\t\t\t// Swap the second and fourth parts in four-part notation rules\n\t\t\t\t// like padding: 1px 2px 3px 4px;\n\t\t\t\t.replace( fourNotationQuantRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t.replace( fourNotationColorRegExp, '$1$2$3$8$5$6$7$4$9' )\n\t\t\t\t// Flip horizontal background percentages\n\t\t\t\t.replace( bgHorizontalPercentageRegExp, calculateNewBackgroundPosition )\n\t\t\t\t.replace( bgHorizontalPercentageXRegExp, calculateNewBackgroundPosition );\n\n\t\t\t// Detokenize\n\t\t\tcss = noFlipSingleTokenizer.detokenize(\n\t\t\t\tnoFlipClassTokenizer.detokenize(\n\t\t\t\t\tcommentTokenizer.detokenize( css )\n\t\t\t\t)\n\t\t\t);\n\n\t\t\treturn css;\n\t\t}\n\t};\n}\n\n/* Initialization */\n\ncssjanus = new CSSJanus();\n\n/* Exports */\n\nif ( typeof module !== 'undefined' && module.exports ) {\n\t/**\n\t * Transform a left-to-right stylesheet to right-to-left.\n\t *\n\t * This function is a static wrapper around the transform method of an instance of CSSJanus.\n\t *\n\t * @param {string} css Stylesheet to transform\n\t * @param {Object|boolean} [options] Options object, or transformDirInUrl option (back-compat)\n\t * @param {boolean} [options.transformDirInUrl=false] Transform directions in URLs\n\t * (e.g. 'ltr', 'rtl')\n\t * @param {boolean} [options.transformEdgeInUrl=false] Transform edges in URLs\n\t * (e.g. 'left', 'right')\n\t * @param {boolean} [transformEdgeInUrl] Back-compat parameter\n\t * @return {string} Transformed stylesheet\n\t */\n\texports.transform = function ( css, options, transformEdgeInUrl ) {\n\t\tvar norm;\n\t\tif ( typeof options === 'object' ) {\n\t\t\tnorm = options;\n\t\t} else {\n\t\t\tnorm = {};\n\t\t\tif ( typeof options === 'boolean' ) {\n\t\t\t\tnorm.transformDirInUrl = options;\n\t\t\t}\n\t\t\tif ( typeof transformEdgeInUrl === 'boolean' ) {\n\t\t\t\tnorm.transformEdgeInUrl = transformEdgeInUrl;\n\t\t\t}\n\t\t}\n\t\treturn cssjanus.transform( css, norm );\n\t};\n} else if ( typeof window !== 'undefined' ) {\n\t/* global window */\n\t// Allow cssjanus to be used in a browser.\n\t// eslint-disable-next-line dot-notation\n\twindow[ 'cssjanus' ] = cssjanus;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}