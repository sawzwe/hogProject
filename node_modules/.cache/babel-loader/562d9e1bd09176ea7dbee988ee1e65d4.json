{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\auth\\\\FirebaseContext.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { createContext, useEffect, useReducer, useCallback } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signOut, signInWithPopup, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, updatePassword } from 'firebase/auth';\nimport { getFirestore, collection, doc, getDoc, setDoc } from 'firebase/firestore';\n// config\nimport { FIREBASE_API } from '../config';\n\n// ----------------------------------------------------------------------\n\n// NOTE:\n// We only build demo at basic level.\n// Customer will need to do some extra handling yourself if you want to extend the logic and other features...\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isInitialized: false,\n  isAuthenticated: false,\n  user: null\n};\nconst reducer = (state, action) => {\n  if (action.type === 'INITIAL') {\n    return {\n      isInitialized: true,\n      isAuthenticated: action.payload.isAuthenticated,\n      user: action.payload.user\n    };\n  }\n  return state;\n};\n\n// ----------------------------------------------------------------------\n\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n// ----------------------------------------------------------------------\n\nconst firebaseApp = initializeApp(FIREBASE_API);\nconst AUTH = getAuth(firebaseApp);\nconst DB = getFirestore(firebaseApp);\nAuthProvider.propTypes = {\n  children: PropTypes.node\n};\nexport function AuthProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const initialize = useCallback(() => {\n    try {\n      onAuthStateChanged(AUTH, async user => {\n        if (user) {\n          const userRef = doc(DB, 'users', user.uid);\n          const docSnap = await getDoc(userRef);\n          const profile = docSnap.data();\n          dispatch({\n            type: 'INITIAL',\n            payload: {\n              isAuthenticated: true,\n              user: {\n                ...user,\n                ...profile\n                // role: 'admin',\n              }\n            }\n          });\n        } else {\n          dispatch({\n            type: 'INITIAL',\n            payload: {\n              isAuthenticated: false,\n              user: null\n            }\n          });\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n  useEffect(() => {\n    initialize();\n  }, [initialize]);\n\n  // LOGIN\n  const login = (email, password) => signInWithEmailAndPassword(AUTH, email, password);\n\n  // REGISTER\n  const register = (email, password, firstName, lastName, role) => createUserWithEmailAndPassword(AUTH, email, password).then(async res => {\n    var _res$user, _res$user2;\n    const userRef = doc(collection(DB, 'users'), (_res$user = res.user) === null || _res$user === void 0 ? void 0 : _res$user.uid);\n    await setDoc(userRef, {\n      uid: (_res$user2 = res.user) === null || _res$user2 === void 0 ? void 0 : _res$user2.uid,\n      email,\n      displayName: `${firstName} ${lastName}`,\n      role\n    });\n  });\n\n  // LOGOUT\n  const logout = () => signOut(AUTH);\n\n  // CHANGE PASSWORD\n  const changePassword = newPassword => updatePassword(AUTH, user, newPassword);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      method: 'firebase',\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"rZTZGYhTivwo786rUN73/JAmys8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["PropTypes","createContext","useEffect","useReducer","useCallback","initializeApp","getAuth","signOut","signInWithPopup","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","updatePassword","getFirestore","collection","doc","getDoc","setDoc","FIREBASE_API","initialState","isInitialized","isAuthenticated","user","reducer","state","action","type","payload","AuthContext","firebaseApp","AUTH","DB","AuthProvider","propTypes","children","node","dispatch","initialize","userRef","uid","docSnap","profile","data","error","console","login","email","password","register","firstName","lastName","role","then","res","displayName","logout","changePassword","newPassword","method"],"sources":["C:/Users/pypho/Desktop/hogProject/src/auth/FirebaseContext.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createContext, useEffect, useReducer, useCallback } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n    getAuth,\r\n    signOut,\r\n    signInWithPopup,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    updatePassword,\r\n} from 'firebase/auth';\r\nimport { getFirestore, collection, doc, getDoc, setDoc } from 'firebase/firestore';\r\n// config\r\nimport { FIREBASE_API } from '../config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// NOTE:\r\n// We only build demo at basic level.\r\n// Customer will need to do some extra handling yourself if you want to extend the logic and other features...\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n    isAuthenticated: false,\r\n    user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'INITIAL') {\r\n        return {\r\n            isInitialized: true,\r\n            isAuthenticated: action.payload.isAuthenticated,\r\n            user: action.payload.user,\r\n        };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst firebaseApp = initializeApp(FIREBASE_API);\r\n\r\nconst AUTH = getAuth(firebaseApp);\r\n\r\nconst DB = getFirestore(firebaseApp);\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const initialize = useCallback(() => {\r\n        try {\r\n            onAuthStateChanged(AUTH, async (user) => {\r\n                if (user) {\r\n\r\n                    const userRef = doc(DB, 'users', user.uid);\r\n\r\n                    const docSnap = await getDoc(userRef);\r\n\r\n                    const profile = docSnap.data();\r\n\r\n                    dispatch({\r\n                        type: 'INITIAL',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user: {\r\n                                ...user,\r\n                                ...profile,\r\n                                // role: 'admin',\r\n                            },\r\n                        },\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INITIAL',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    });\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        initialize();\r\n    }, [initialize]);\r\n\r\n    // LOGIN\r\n    const login = (email, password) => signInWithEmailAndPassword(AUTH, email, password);\r\n\r\n    // REGISTER\r\n    const register = (email, password, firstName, lastName, role) =>\r\n        createUserWithEmailAndPassword(AUTH, email, password).then(async (res) => {\r\n            const userRef = doc(collection(DB, 'users'), res.user?.uid);\r\n\r\n            await setDoc(userRef, {\r\n                uid: res.user?.uid,\r\n                email,\r\n                displayName: `${firstName} ${lastName}`,\r\n                role\r\n            });\r\n        });\r\n\r\n    // LOGOUT\r\n    const logout = () => signOut(AUTH);\r\n\r\n    // CHANGE PASSWORD\r\n    const changePassword = (newPassword) => updatePassword(AUTH, user, newPassword);\r\n    \r\n    \r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'firebase',\r\n                login,\r\n                register,\r\n                logout,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}