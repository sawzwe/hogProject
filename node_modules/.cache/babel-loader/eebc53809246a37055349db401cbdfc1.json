{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\settings\\\\drawer\\\\ToggleButton.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\n// @mui\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Tooltip, Box } from '@mui/material';\n// utils\nimport { bgBlur } from '../../../utils/cssStyles';\n//\nimport { IconButtonAnimate } from '../../animate';\nimport SvgColor from '../../svg-color';\n//\nimport BadgeDot from './BadgeDot';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nToggleButton.propTypes = {\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  notDefault: PropTypes.bool\n};\nexport default function ToggleButton(_ref) {\n  _s();\n  let {\n    notDefault,\n    open,\n    onToggle\n  } = _ref;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 0.5,\n      right: 24,\n      bottom: 24,\n      zIndex: 999,\n      position: 'fixed',\n      borderRadius: '50%',\n      boxShadow: `-12px 12px 32px -4px ${alpha(theme.palette.mode === 'light' ? theme.palette.grey[600] : theme.palette.common.black, 0.36)}`,\n      ...bgBlur({\n        color: theme.palette.background.default\n      })\n    },\n    children: [notDefault && !open && /*#__PURE__*/_jsxDEV(BadgeDot, {\n      sx: {\n        top: 8,\n        right: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Settings\",\n      children: /*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n        color: \"primary\",\n        onClick: onToggle,\n        sx: {\n          p: 1.25\n        },\n        children: /*#__PURE__*/_jsxDEV(SvgColor, {\n          src: \"/assets/icons/setting/ic_setting.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["PropTypes","alpha","useTheme","Tooltip","Box","bgBlur","IconButtonAnimate","SvgColor","BadgeDot","ToggleButton","propTypes","open","bool","onToggle","func","notDefault","theme","p","right","bottom","zIndex","position","borderRadius","boxShadow","palette","mode","grey","common","black","color","background","default","top"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/settings/drawer/ToggleButton.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport { Tooltip, Box } from '@mui/material';\r\n// utils\r\nimport { bgBlur } from '../../../utils/cssStyles';\r\n//\r\nimport { IconButtonAnimate } from '../../animate';\r\nimport SvgColor from '../../svg-color';\r\n//\r\nimport BadgeDot from './BadgeDot';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nToggleButton.propTypes = {\r\n  open: PropTypes.bool,\r\n  onToggle: PropTypes.func,\r\n  notDefault: PropTypes.bool,\r\n};\r\n\r\nexport default function ToggleButton({ notDefault, open, onToggle }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 0.5,\r\n        right: 24,\r\n        bottom: 24,\r\n        zIndex: 999,\r\n        position: 'fixed',\r\n        borderRadius: '50%',\r\n        boxShadow: `-12px 12px 32px -4px ${alpha(\r\n          theme.palette.mode === 'light' ? theme.palette.grey[600] : theme.palette.common.black,\r\n          0.36\r\n        )}`,\r\n        ...bgBlur({ color: theme.palette.background.default }),\r\n      }}\r\n    >\r\n      {notDefault && !open && (\r\n        <BadgeDot\r\n          sx={{\r\n            top: 8,\r\n            right: 10,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Tooltip title=\"Settings\">\r\n        <IconButtonAnimate color=\"primary\" onClick={onToggle} sx={{ p: 1.25 }}>\r\n          <SvgColor src=\"/assets/icons/setting/ic_setting.svg\" />\r\n        </IconButtonAnimate>\r\n      </Tooltip>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,SAASC,KAAK,EAAEC,QAAQ,QAAQ,sBAAsB;AACtD,SAASC,OAAO,EAAEC,GAAG,QAAQ,eAAe;AAC5C;AACA,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA,SAASC,iBAAiB,QAAQ,eAAe;AACjD,OAAOC,QAAQ,MAAM,iBAAiB;AACtC;AACA,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AAAA;AAEAC,YAAY,CAACC,SAAS,GAAG;EACvBC,IAAI,EAAEX,SAAS,CAACY,IAAI;EACpBC,QAAQ,EAAEb,SAAS,CAACc,IAAI;EACxBC,UAAU,EAAEf,SAAS,CAACY;AACxB,CAAC;AAED,eAAe,SAASH,YAAY,OAAiC;EAAA;EAAA,IAAhC;IAAEM,UAAU;IAAEJ,IAAI;IAAEE;EAAS,CAAC;EACjE,MAAMG,KAAK,GAAGd,QAAQ,EAAE;EAExB,oBACE,QAAC,GAAG;IACF,EAAE,EAAE;MACFe,CAAC,EAAE,GAAG;MACNC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE,OAAO;MACjBC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAG,wBAAuBtB,KAAK,CACtCe,KAAK,CAACQ,OAAO,CAACC,IAAI,KAAK,OAAO,GAAGT,KAAK,CAACQ,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,GAAGV,KAAK,CAACQ,OAAO,CAACG,MAAM,CAACC,KAAK,EACrF,IAAI,CACJ,EAAC;MACH,GAAGvB,MAAM,CAAC;QAAEwB,KAAK,EAAEb,KAAK,CAACQ,OAAO,CAACM,UAAU,CAACC;MAAQ,CAAC;IACvD,CAAE;IAAA,WAEDhB,UAAU,IAAI,CAACJ,IAAI,iBAClB,QAAC,QAAQ;MACP,EAAE,EAAE;QACFqB,GAAG,EAAE,CAAC;QACNd,KAAK,EAAE;MACT;IAAE;MAAA;MAAA;MAAA;IAAA,QAEL,eAED,QAAC,OAAO;MAAC,KAAK,EAAC,UAAU;MAAA,uBACvB,QAAC,iBAAiB;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAEL,QAAS;QAAC,EAAE,EAAE;UAAEI,CAAC,EAAE;QAAK,CAAE;QAAA,uBACpE,QAAC,QAAQ;UAAC,GAAG,EAAC;QAAsC;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACrC;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAnCuBR,YAAY;EAAA,QACpBP,QAAQ;AAAA;AAAA,KADAO,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}