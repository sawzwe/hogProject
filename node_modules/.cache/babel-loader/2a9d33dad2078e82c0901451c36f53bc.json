{"ast":null,"code":"import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox, true);\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n    return false;\n  };\n  return ResizeObservation;\n}();\nexport { ResizeObservation };","map":null,"metadata":{},"sourceType":"module"}