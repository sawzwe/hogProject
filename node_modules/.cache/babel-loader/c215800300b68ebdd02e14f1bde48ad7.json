{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\sections\\\\auth\\\\AuthResetPasswordForm.js\",\n  _s = $RefreshSig$();\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// auth\nimport { useAuthContext } from '../../auth/useAuthContext';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthResetPasswordForm() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user,\n    changePassword\n  } = useAuthContext();\n  console.log(changePassword);\n  const ResetPasswordSchema = Yup.object().shape({\n    newPassword: Yup.string().required('New Password is required')\n  });\n  const methods = useForm({\n    resolver: yupResolver(ResetPasswordSchema)\n    // defaultValues: { newPassword: 'demo@minimals.cc' },\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n  const onSubmit = async data => {\n    try {\n      console.log(changePassword());\n      await changePassword(data.newPassword);\n    } catch (error) {\n      console.error(error.message);\n      reset();\n      setError('afterSubmit', {\n        ...error,\n        message: error.message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: /*#__PURE__*/_jsxDEV(RHFTextField, {\n        name: \"newPassword\",\n        label: \"New password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      loading: isSubmitting,\n      sx: {\n        mt: 3\n      },\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthResetPasswordForm, \"97JmvXavq5JnzFstxdxWs2tUS5c=\", false, function () {\n  return [useNavigate, useAuthContext, useForm];\n});\n_c = AuthResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"AuthResetPasswordForm\");","map":{"version":3,"names":["Yup","useNavigate","yupResolver","useForm","Link","Stack","Alert","IconButton","InputAdornment","LoadingButton","useAuthContext","PATH_AUTH","FormProvider","RHFTextField","AuthResetPasswordForm","navigate","user","changePassword","console","log","ResetPasswordSchema","object","shape","newPassword","string","required","methods","resolver","reset","setError","handleSubmit","formState","isSubmitting","onSubmit","data","error","message","mt"],"sources":["C:/Users/pypho/Desktop/hogProject/src/sections/auth/AuthResetPasswordForm.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Link, Stack, Alert, IconButton, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// auth\r\nimport { useAuthContext } from '../../auth/useAuthContext';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// components\r\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthResetPasswordForm() {\r\n    const navigate = useNavigate();\r\n    const { user, changePassword } = useAuthContext();\r\n    console.log(changePassword)\r\n\r\n    const ResetPasswordSchema = Yup.object().shape({\r\n        newPassword: Yup.string().required('New Password is required')\r\n    });\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(ResetPasswordSchema),\r\n        // defaultValues: { newPassword: 'demo@minimals.cc' },\r\n    });\r\n\r\n    const {\r\n        reset,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { isSubmitting },\r\n    } = methods;\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            console.log(changePassword());\r\n\r\n            await changePassword(data.newPassword);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n\r\n            reset();\r\n\r\n            setError('afterSubmit', {\r\n                ...error,\r\n                message: error.message\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n            <Stack spacing={3}>\r\n                <RHFTextField name=\"newPassword\" label=\"New password\" />\r\n            </Stack>\r\n\r\n            <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting} sx={{ mt: 3 }}>\r\n                Change Password\r\n            </LoadingButton>\r\n        </FormProvider>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,OAAO,QAAQ,iBAAiB;AACzC;AACA,SAASC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC9E,SAASC,aAAa,QAAQ,UAAU;AACxC;AACA,SAASC,cAAc,QAAQ,2BAA2B;AAC1D;AACA,SAASC,SAAS,QAAQ,oBAAoB;AAC9C;AACA,OAAOC,YAAY,IAAIC,YAAY,QAAQ,4BAA4B;;AAEvE;AAAA;AAEA,eAAe,SAASC,qBAAqB,GAAG;EAAA;EAC5C,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAM;IAAEe,IAAI;IAAEC;EAAe,CAAC,GAAGP,cAAc,EAAE;EACjDQ,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;EAE3B,MAAMG,mBAAmB,GAAGpB,GAAG,CAACqB,MAAM,EAAE,CAACC,KAAK,CAAC;IAC3CC,WAAW,EAAEvB,GAAG,CAACwB,MAAM,EAAE,CAACC,QAAQ,CAAC,0BAA0B;EACjE,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGvB,OAAO,CAAC;IACpBwB,QAAQ,EAAEzB,WAAW,CAACkB,mBAAmB;IACzC;EACJ,CAAC,CAAC;;EAEF,MAAM;IACFQ,KAAK;IACLC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAa;EAC9B,CAAC,GAAGN,OAAO;EAEX,MAAMO,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC7B,IAAI;MACAhB,OAAO,CAACC,GAAG,CAACF,cAAc,EAAE,CAAC;MAE7B,MAAMA,cAAc,CAACiB,IAAI,CAACX,WAAW,CAAC;IAC1C,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZjB,OAAO,CAACiB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAE5BR,KAAK,EAAE;MAEPC,QAAQ,CAAC,aAAa,EAAE;QACpB,GAAGM,KAAK;QACRC,OAAO,EAAED,KAAK,CAACC;MACnB,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACI,QAAC,YAAY;IAAC,OAAO,EAAEV,OAAQ;IAAC,QAAQ,EAAEI,YAAY,CAACG,QAAQ,CAAE;IAAA,wBAC7D,QAAC,KAAK;MAAC,OAAO,EAAE,CAAE;MAAA,uBACd,QAAC,YAAY;QAAC,IAAI,EAAC,aAAa;QAAC,KAAK,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpD,eAER,QAAC,aAAa;MAAC,SAAS;MAAC,IAAI,EAAC,OAAO;MAAC,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAC,WAAW;MAAC,OAAO,EAAED,YAAa;MAAC,EAAE,EAAE;QAAEK,EAAE,EAAE;MAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE7F;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEvB;AAAC,GAjDuBvB,qBAAqB;EAAA,QACxBb,WAAW,EACKS,cAAc,EAO/BP,OAAO;AAAA;AAAA,KATHW,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}