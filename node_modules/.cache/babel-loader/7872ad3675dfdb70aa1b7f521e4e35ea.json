{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\hook-form\\\\RHFCodes.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Stack, TextField } from '@mui/material';\n// hooks\nimport useEventListener from '../../hooks/useEventListener';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFCodes.propTypes = {\n  keyName: PropTypes.string,\n  inputs: PropTypes.arrayOf(PropTypes.string)\n};\nexport default function RHFCodes(_ref) {\n  _s();\n  let {\n    keyName = '',\n    inputs = [],\n    ...other\n  } = _ref;\n  const codesRef = useRef(null);\n  const {\n    control,\n    setValue\n  } = useFormContext();\n  const handlePaste = event => {\n    let data = event.clipboardData.getData('text');\n    data = data.split('');\n    inputs.map((input, index) => setValue(input, data[index]));\n    event.preventDefault();\n  };\n  const handleChangeWithNextField = (event, handleChange) => {\n    const {\n      maxLength,\n      value,\n      name\n    } = event.target;\n    const fieldIndex = name.replace(keyName, '');\n    const fieldIntIndex = Number(fieldIndex);\n    const nextfield = document.querySelector(`input[name=${keyName}${fieldIntIndex + 1}]`);\n    if (value.length > maxLength) {\n      event.target.value = value[0];\n    }\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextfield !== null) {\n      nextfield.focus();\n    }\n    handleChange(event);\n  };\n  useEventListener('paste', handlePaste, codesRef);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    justifyContent: \"center\",\n    ref: codesRef,\n    children: inputs.map((name, index) => /*#__PURE__*/_jsxDEV(Controller, {\n      name: `${keyName}${index + 1}`,\n      control: control,\n      render: _ref2 => {\n        let {\n          field,\n          fieldState: {\n            error\n          }\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          ...field,\n          error: !!error,\n          autoFocus: index === 0,\n          placeholder: \"-\",\n          onChange: event => {\n            handleChangeWithNextField(event, field.onChange);\n          },\n          onFocus: event => event.currentTarget.select(),\n          InputProps: {\n            sx: {\n              width: {\n                xs: 36,\n                sm: 56\n              },\n              height: {\n                xs: 36,\n                sm: 56\n              },\n              '& input': {\n                p: 0,\n                textAlign: 'center'\n              }\n            }\n          },\n          inputProps: {\n            maxLength: 1,\n            type: 'number'\n          },\n          ...other\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      }\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(RHFCodes, \"JBAkJ1psWaYOvTmMoj11lGyJ3TE=\", false, function () {\n  return [useFormContext, useEventListener];\n});\n_c = RHFCodes;\nvar _c;\n$RefreshReg$(_c, \"RHFCodes\");","map":{"version":3,"names":["PropTypes","useRef","useFormContext","Controller","Stack","TextField","useEventListener","RHFCodes","propTypes","keyName","string","inputs","arrayOf","other","codesRef","control","setValue","handlePaste","event","data","clipboardData","getData","split","map","input","index","preventDefault","handleChangeWithNextField","handleChange","maxLength","value","name","target","fieldIndex","replace","fieldIntIndex","Number","nextfield","document","querySelector","length","focus","field","fieldState","error","onChange","currentTarget","select","sx","width","xs","sm","height","p","textAlign","type"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/hook-form/RHFCodes.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, TextField } from '@mui/material';\r\n// hooks\r\nimport useEventListener from '../../hooks/useEventListener';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFCodes.propTypes = {\r\n  keyName: PropTypes.string,\r\n  inputs: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default function RHFCodes({ keyName = '', inputs = [], ...other }) {\r\n  const codesRef = useRef(null);\r\n\r\n  const { control, setValue } = useFormContext();\r\n\r\n  const handlePaste = (event) => {\r\n    let data = event.clipboardData.getData('text');\r\n\r\n    data = data.split('');\r\n\r\n    inputs.map((input, index) => setValue(input, data[index]));\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIndex = name.replace(keyName, '');\r\n\r\n    const fieldIntIndex = Number(fieldIndex);\r\n\r\n    const nextfield = document.querySelector(`input[name=${keyName}${fieldIntIndex + 1}]`);\r\n\r\n    if (value.length > maxLength) {\r\n      event.target.value = value[0];\r\n    }\r\n\r\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextfield !== null) {\r\n      nextfield.focus();\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  useEventListener('paste', handlePaste, codesRef);\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\r\n      {inputs.map((name, index) => (\r\n        <Controller\r\n          key={name}\r\n          name={`${keyName}${index + 1}`}\r\n          control={control}\r\n          render={({ field, fieldState: { error } }) => (\r\n            <TextField\r\n              {...field}\r\n              error={!!error}\r\n              autoFocus={index === 0}\r\n              placeholder=\"-\"\r\n              onChange={(event) => {\r\n                handleChangeWithNextField(event, field.onChange);\r\n              }}\r\n              onFocus={(event) => event.currentTarget.select()}\r\n              InputProps={{\r\n                sx: {\r\n                  width: { xs: 36, sm: 56 },\r\n                  height: { xs: 36, sm: 56 },\r\n                  '& input': { p: 0, textAlign: 'center' },\r\n                },\r\n              }}\r\n              inputProps={{\r\n                maxLength: 1,\r\n                type: 'number',\r\n              }}\r\n              {...other}\r\n            />\r\n          )}\r\n        />\r\n      ))}\r\n    </Stack>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}