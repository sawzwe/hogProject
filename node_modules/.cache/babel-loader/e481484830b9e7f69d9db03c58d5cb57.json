{"ast":null,"code":"import _mock from '../_mock';\nimport { randomInArray } from '../utils';\n\n// ----------------------------------------------------------------------\n\nexport const _carouselsMembers = [...Array(6)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  role: _mock.role(index),\n  avatar: `/assets/images/portraits/portrait_${index + 1}.jpg`\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _faqs = [...Array(8)].map((_, index) => ({\n  id: _mock.id(index),\n  value: `panel${index + 1}`,\n  heading: `Questions ${index + 1}`,\n  detail: _mock.text.description(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  receiver: _mock.name.fullName(index),\n  fullAddress: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  addressType: index === 0 ? 'Home' : 'Office',\n  isDefault: index === 0\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _skills = [...Array(3)].map((_, index) => ({\n  label: ['Development', 'Design', 'Marketing'][index],\n  value: _mock.number.percent(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _contacts = [...Array(20)].map((_, index) => ({\n  id: _mock.id(index),\n  name: _mock.name.fullName(index),\n  username: _mock.name.fullName(index),\n  avatar: _mock.image.avatar(index),\n  address: _mock.address.fullAddress(index),\n  phone: _mock.phoneNumber(index),\n  email: _mock.email(index),\n  lastActivity: _mock.time(index),\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\n  role: _mock.role(index)\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _notifications = [...Array(5)].map((_, index) => ({\n  id: _mock.id(index),\n  title: ['Your order is placed', 'Sylvan King', 'You have new message', 'You have new mail', 'Delivery processing'][index],\n  description: ['waiting for shipping', 'answered to your comment on the Minimal', '5 unread messages', 'sent from Guido Padberg', 'Your order is being shipped'][index],\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\n  createdAt: _mock.time(index),\n  isUnRead: [true, true, false, false, false][index]\n}));\n\n// ----------------------------------------------------------------------\n\nexport const _mapContact = [{\n  latlng: [33, 65],\n  address: _mock.address.fullAddress(1),\n  phoneNumber: _mock.phoneNumber(1)\n}, {\n  latlng: [-12.5, 18.5],\n  address: _mock.address.fullAddress(2),\n  phoneNumber: _mock.phoneNumber(2)\n}];\n\n// ----------------------------------------------------------------------\n\nexport const _socials = [{\n  value: 'facebook',\n  name: 'FaceBook',\n  icon: 'eva:facebook-fill',\n  color: '#1877F2',\n  path: 'https://www.facebook.com/caitlyn.kerluke'\n}, {\n  value: 'instagram',\n  name: 'Instagram',\n  icon: 'ant-design:instagram-filled',\n  color: '#E02D69',\n  path: 'https://www.instagram.com/caitlyn.kerluke'\n}, {\n  value: 'linkedin',\n  name: 'Linkedin',\n  icon: 'eva:linkedin-fill',\n  color: '#007EBB',\n  path: 'https://www.linkedin.com/caitlyn.kerluke'\n}, {\n  value: 'twitter',\n  name: 'Twitter',\n  icon: 'eva:twitter-fill',\n  color: '#00AAEC',\n  path: 'https://www.twitter.com/caitlyn.kerluke'\n}];","map":{"version":3,"names":["_mock","randomInArray","_carouselsMembers","Array","map","_","index","id","name","fullName","role","avatar","_faqs","value","heading","detail","text","description","_addressBooks","receiver","fullAddress","address","phone","phoneNumber","addressType","isDefault","_skills","label","number","percent","_contacts","username","image","email","lastActivity","time","status","_notifications","title","type","createdAt","isUnRead","_mapContact","latlng","_socials","icon","color","path"],"sources":["C:/Users/pypho/Desktop/hogProject/src/_mock/arrays/_others.js"],"sourcesContent":["import _mock from '../_mock';\r\nimport { randomInArray } from '../utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _carouselsMembers = [...Array(6)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  name: _mock.name.fullName(index),\r\n  role: _mock.role(index),\r\n  avatar: `/assets/images/portraits/portrait_${index + 1}.jpg`,\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _faqs = [...Array(8)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  value: `panel${index + 1}`,\r\n  heading: `Questions ${index + 1}`,\r\n  detail: _mock.text.description(index),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _addressBooks = [...Array(5)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  receiver: _mock.name.fullName(index),\r\n  fullAddress: _mock.address.fullAddress(index),\r\n  phone: _mock.phoneNumber(index),\r\n  addressType: index === 0 ? 'Home' : 'Office',\r\n  isDefault: index === 0,\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _skills = [...Array(3)].map((_, index) => ({\r\n  label: ['Development', 'Design', 'Marketing'][index],\r\n  value: _mock.number.percent(index),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _contacts = [...Array(20)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  name: _mock.name.fullName(index),\r\n  username: _mock.name.fullName(index),\r\n  avatar: _mock.image.avatar(index),\r\n  address: _mock.address.fullAddress(index),\r\n  phone: _mock.phoneNumber(index),\r\n  email: _mock.email(index),\r\n  lastActivity: _mock.time(index),\r\n  status: randomInArray(['online', 'offline', 'away', 'busy']),\r\n  role: _mock.role(index),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _notifications = [...Array(5)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  title: [\r\n    'Your order is placed',\r\n    'Sylvan King',\r\n    'You have new message',\r\n    'You have new mail',\r\n    'Delivery processing',\r\n  ][index],\r\n  description: [\r\n    'waiting for shipping',\r\n    'answered to your comment on the Minimal',\r\n    '5 unread messages',\r\n    'sent from Guido Padberg',\r\n    'Your order is being shipped',\r\n  ][index],\r\n  avatar: [null, _mock.image.avatar(2), null, null, null][index],\r\n  type: ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'][index],\r\n  createdAt: _mock.time(index),\r\n  isUnRead: [true, true, false, false, false][index],\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _mapContact = [\r\n  {\r\n    latlng: [33, 65],\r\n    address: _mock.address.fullAddress(1),\r\n    phoneNumber: _mock.phoneNumber(1),\r\n  },\r\n  {\r\n    latlng: [-12.5, 18.5],\r\n    address: _mock.address.fullAddress(2),\r\n    phoneNumber: _mock.phoneNumber(2),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _socials = [\r\n  {\r\n    value: 'facebook',\r\n    name: 'FaceBook',\r\n    icon: 'eva:facebook-fill',\r\n    color: '#1877F2',\r\n    path: 'https://www.facebook.com/caitlyn.kerluke',\r\n  },\r\n  {\r\n    value: 'instagram',\r\n    name: 'Instagram',\r\n    icon: 'ant-design:instagram-filled',\r\n    color: '#E02D69',\r\n    path: 'https://www.instagram.com/caitlyn.kerluke',\r\n  },\r\n  {\r\n    value: 'linkedin',\r\n    name: 'Linkedin',\r\n    icon: 'eva:linkedin-fill',\r\n    color: '#007EBB',\r\n    path: 'https://www.linkedin.com/caitlyn.kerluke',\r\n  },\r\n  {\r\n    value: 'twitter',\r\n    name: 'Twitter',\r\n    icon: 'eva:twitter-fill',\r\n    color: '#00AAEC',\r\n    path: 'https://www.twitter.com/caitlyn.kerluke',\r\n  },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}