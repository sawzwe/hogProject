{"ast":null,"code":"import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) {\n  return parseFloat(pixel || '0');\n};\nvar size = function (inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n  devicePixelContentBoxSize: size(),\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n  if (forceRecalculation === void 0) {\n    forceRecalculation = false;\n  }\n  if (cache.has(target) && !forceRecalculation) {\n    return cache.get(target);\n  }\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = freeze({\n    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n  var _a = calculateBoxSizes(target, forceRecalculation),\n    borderBoxSize = _a.borderBoxSize,\n    contentBoxSize = _a.contentBoxSize,\n    devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n  switch (observedBox) {\n    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n      return devicePixelContentBoxSize;\n    case ResizeObserverBoxOptions.BORDER_BOX:\n      return borderBoxSize;\n    default:\n      return contentBoxSize;\n  }\n};\nexport { calculateBoxSize, calculateBoxSizes };","map":{"version":3,"names":["ResizeObserverBoxOptions","ResizeObserverSize","DOMRectReadOnly","isSVG","isHidden","freeze","global","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","target","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","getBBox","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","borderLeft","borderLeftWidth","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","offsetHeight","clientHeight","verticalScrollbarThickness","offsetWidth","clientWidth","widthReduction","heightReduction","contentWidth","width","contentHeight","height","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","_a","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX"],"sources":["C:/Users/pypho/Desktop/hogProject/node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js"],"sourcesContent":["import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}