{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pypho\\\\Desktop\\\\hogProject\\\\src\\\\components\\\\hook-form\\\\RHFCheckbox.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFCheckbox.propTypes = {\n  name: PropTypes.string\n};\nexport function RHFCheckbox(_ref) {\n  _s();\n  let {\n    name,\n    ...other\n  } = _ref;\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    control: control,\n    render: _ref2 => {\n      let {\n        field\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          ...field,\n          checked: field.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 57\n        }, this),\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// ----------------------------------------------------------------------\n_s(RHFCheckbox, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n_c = RHFCheckbox;\nRHFMultiCheckbox.propTypes = {\n  name: PropTypes.string,\n  options: PropTypes.array\n};\nexport function RHFMultiCheckbox(_ref3) {\n  _s2();\n  let {\n    name,\n    options,\n    ...other\n  } = _ref3;\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    control: control,\n    render: _ref4 => {\n      let {\n        field\n      } = _ref4;\n      const onSelected = option => field.value.includes(option) ? field.value.filter(value => value !== option) : [...field.value, option];\n      return /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: field.value.includes(option.value),\n            onChange: () => field.onChange(onSelected(option.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this),\n          label: option.label,\n          ...other\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s2(RHFMultiCheckbox, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n_c2 = RHFMultiCheckbox;\nvar _c, _c2;\n$RefreshReg$(_c, \"RHFCheckbox\");\n$RefreshReg$(_c2, \"RHFMultiCheckbox\");","map":{"version":3,"names":["PropTypes","useFormContext","Controller","Checkbox","FormControlLabel","FormGroup","RHFCheckbox","propTypes","name","string","other","control","field","value","RHFMultiCheckbox","options","array","onSelected","option","includes","filter","map","onChange","label"],"sources":["C:/Users/pypho/Desktop/hogProject/src/components/hook-form/RHFCheckbox.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFCheckbox.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport function RHFCheckbox({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => <FormControlLabel control={<Checkbox {...field} checked={field.value} />} {...other} />}\r\n    />\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFMultiCheckbox.propTypes = {\r\n  name: PropTypes.string,\r\n  options: PropTypes.array,\r\n};\r\n\r\nexport function RHFMultiCheckbox({ name, options, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field }) => {\r\n        const onSelected = (option) =>\r\n          field.value.includes(option) ? field.value.filter((value) => value !== option) : [...field.value, option];\r\n\r\n        return (\r\n          <FormGroup>\r\n            {options.map((option) => (\r\n              <FormControlLabel\r\n                key={option.value}\r\n                control={\r\n                  <Checkbox\r\n                    checked={field.value.includes(option.value)}\r\n                    onChange={() => field.onChange(onSelected(option.value))}\r\n                  />\r\n                }\r\n                label={option.label}\r\n                {...other}\r\n              />\r\n            ))}\r\n          </FormGroup>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,SAASC,cAAc,EAAEC,UAAU,QAAQ,iBAAiB;AAC5D;AACA,SAASC,QAAQ,EAAEC,gBAAgB,EAAEC,SAAS,QAAQ,eAAe;;AAErE;AAAA;AAEAC,WAAW,CAACC,SAAS,GAAG;EACtBC,IAAI,EAAER,SAAS,CAACS;AAClB,CAAC;AAED,OAAO,SAASH,WAAW,OAAqB;EAAA;EAAA,IAApB;IAAEE,IAAI;IAAE,GAAGE;EAAM,CAAC;EAC5C,MAAM;IAAEC;EAAQ,CAAC,GAAGV,cAAc,EAAE;EAEpC,oBACE,QAAC,UAAU;IACT,IAAI,EAAEO,IAAK;IACX,OAAO,EAAEG,OAAQ;IACjB,MAAM,EAAE;MAAA,IAAC;QAAEC;MAAM,CAAC;MAAA,oBAAK,QAAC,gBAAgB;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA,GAAKA,KAAK;UAAE,OAAO,EAAEA,KAAK,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI;QAAA,GAAKH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;EAAC;IAAA;IAAA;IAAA;EAAA,QAC/G;AAEN;;AAEA;AAAA,GAZgBJ,WAAW;EAAA,QACLL,cAAc;AAAA;AAAA,KADpBK,WAAW;AAc3BQ,gBAAgB,CAACP,SAAS,GAAG;EAC3BC,IAAI,EAAER,SAAS,CAACS,MAAM;EACtBM,OAAO,EAAEf,SAAS,CAACgB;AACrB,CAAC;AAED,OAAO,SAASF,gBAAgB,QAA8B;EAAA;EAAA,IAA7B;IAAEN,IAAI;IAAEO,OAAO;IAAE,GAAGL;EAAM,CAAC;EAC1D,MAAM;IAAEC;EAAQ,CAAC,GAAGV,cAAc,EAAE;EAEpC,oBACE,QAAC,UAAU;IACT,IAAI,EAAEO,IAAK;IACX,OAAO,EAAEG,OAAQ;IACjB,MAAM,EAAE,SAAe;MAAA,IAAd;QAAEC;MAAM,CAAC;MAChB,MAAMK,UAAU,GAAIC,MAAM,IACxBN,KAAK,CAACC,KAAK,CAACM,QAAQ,CAACD,MAAM,CAAC,GAAGN,KAAK,CAACC,KAAK,CAACO,MAAM,CAAEP,KAAK,IAAKA,KAAK,KAAKK,MAAM,CAAC,GAAG,CAAC,GAAGN,KAAK,CAACC,KAAK,EAAEK,MAAM,CAAC;MAE3G,oBACE,QAAC,SAAS;QAAA,UACPH,OAAO,CAACM,GAAG,CAAEH,MAAM,iBAClB,QAAC,gBAAgB;UAEf,OAAO,eACL,QAAC,QAAQ;YACP,OAAO,EAAEN,KAAK,CAACC,KAAK,CAACM,QAAQ,CAACD,MAAM,CAACL,KAAK,CAAE;YAC5C,QAAQ,EAAE,MAAMD,KAAK,CAACU,QAAQ,CAACL,UAAU,CAACC,MAAM,CAACL,KAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAE5D;UACD,KAAK,EAAEK,MAAM,CAACK,KAAM;UAAA,GAChBb;QAAK,GARJQ,MAAM,CAACL,KAAK;UAAA;UAAA;UAAA;QAAA,QAUpB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ;IAEhB;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN;AAAC,IA/BeC,gBAAgB;EAAA,QACVb,cAAc;AAAA;AAAA,MADpBa,gBAAgB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}