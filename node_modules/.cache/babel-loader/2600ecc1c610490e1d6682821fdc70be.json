{"ast":null,"code":"import { alpha } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst COLORS = ['primary', 'secondary', 'info', 'success', 'warning', 'error'];\n\n// NEW VARIANT\n\nexport default function Button(theme) {\n  const isLight = theme.palette.mode === 'light';\n  const rootStyle = ownerState => {\n    const inheritColor = ownerState.color === 'inherit';\n    const containedVariant = ownerState.variant === 'contained';\n    const outlinedVariant = ownerState.variant === 'outlined';\n    const textVariant = ownerState.variant === 'text';\n    const softVariant = ownerState.variant === 'soft';\n    const smallSize = ownerState.size === 'small';\n    const largeSize = ownerState.size === 'large';\n    const defaultStyle = {\n      ...(inheritColor && {\n        // CONTAINED\n        ...(containedVariant && {\n          color: theme.palette.grey[800],\n          '&:hover': {\n            boxShadow: theme.customShadows.z8,\n            backgroundColor: theme.palette.grey[400]\n          }\n        }),\n        // OUTLINED\n        ...(outlinedVariant && {\n          borderColor: alpha(theme.palette.grey[500], 0.32),\n          '&:hover': {\n            borderColor: theme.palette.text.primary,\n            backgroundColor: theme.palette.action.hover\n          }\n        }),\n        // TEXT\n        ...(textVariant && {\n          '&:hover': {\n            backgroundColor: theme.palette.action.hover\n          }\n        }),\n        // SOFT\n        ...(softVariant && {\n          color: theme.palette.text.primary,\n          backgroundColor: alpha(theme.palette.grey[500], 0.08),\n          '&:hover': {\n            backgroundColor: alpha(theme.palette.grey[500], 0.24)\n          }\n        })\n      })\n    };\n    const colorStyle = COLORS.map(color => ({\n      ...(ownerState.color === color && {\n        // CONTAINED\n        ...(containedVariant && {\n          '&:hover': {\n            boxShadow: theme.customShadows[color]\n          }\n        }),\n        // SOFT\n        ...(softVariant && {\n          color: theme.palette[color][isLight ? 'dark' : 'light'],\n          backgroundColor: alpha(theme.palette[color].main, 0.16),\n          '&:hover': {\n            backgroundColor: alpha(theme.palette[color].main, 0.32)\n          }\n        })\n      })\n    }));\n    const disabledState = {\n      '&.Mui-disabled': {\n        // SOFT\n        ...(softVariant && {\n          backgroundColor: theme.palette.action.disabledBackground\n        })\n      }\n    };\n    const size = {\n      ...(smallSize && {\n        height: 30,\n        fontSize: 13,\n        ...(softVariant && {\n          padding: '4px 10px'\n        })\n      }),\n      ...(largeSize && {\n        height: 48,\n        fontSize: 15,\n        ...(softVariant && {\n          padding: '8px 22px'\n        })\n      })\n    };\n    return [...colorStyle, defaultStyle, disabledState, size];\n  };\n  return {\n    MuiButton: {\n      defaultProps: {\n        disableElevation: true\n      },\n      styleOverrides: {\n        root: _ref => {\n          let {\n            ownerState\n          } = _ref;\n          return rootStyle(ownerState);\n        }\n      }\n    }\n  };\n}\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["alpha","COLORS","Button","theme","isLight","palette","mode","rootStyle","ownerState","inheritColor","color","containedVariant","variant","outlinedVariant","textVariant","softVariant","smallSize","size","largeSize","defaultStyle","grey","boxShadow","customShadows","z8","backgroundColor","borderColor","text","primary","action","hover","colorStyle","map","main","disabledState","disabledBackground","height","fontSize","padding","MuiButton","defaultProps","disableElevation","styleOverrides","root"],"sources":["C:/Users/pypho/Desktop/hogProject/src/theme/overrides/Button.js"],"sourcesContent":["import { alpha } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLORS = ['primary', 'secondary', 'info', 'success', 'warning', 'error'];\r\n\r\n// NEW VARIANT\r\n\r\nexport default function Button(theme) {\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  const rootStyle = (ownerState) => {\r\n    const inheritColor = ownerState.color === 'inherit';\r\n\r\n    const containedVariant = ownerState.variant === 'contained';\r\n\r\n    const outlinedVariant = ownerState.variant === 'outlined';\r\n\r\n    const textVariant = ownerState.variant === 'text';\r\n\r\n    const softVariant = ownerState.variant === 'soft';\r\n\r\n    const smallSize = ownerState.size === 'small';\r\n\r\n    const largeSize = ownerState.size === 'large';\r\n\r\n    const defaultStyle = {\r\n      ...(inheritColor && {\r\n        // CONTAINED\r\n        ...(containedVariant && {\r\n          color: theme.palette.grey[800],\r\n          '&:hover': {\r\n            boxShadow: theme.customShadows.z8,\r\n            backgroundColor: theme.palette.grey[400],\r\n          },\r\n        }),\r\n        // OUTLINED\r\n        ...(outlinedVariant && {\r\n          borderColor: alpha(theme.palette.grey[500], 0.32),\r\n          '&:hover': {\r\n            borderColor: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        }),\r\n        // TEXT\r\n        ...(textVariant && {\r\n          '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n          },\r\n        }),\r\n        // SOFT\r\n        ...(softVariant && {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: alpha(theme.palette.grey[500], 0.08),\r\n          '&:hover': {\r\n            backgroundColor: alpha(theme.palette.grey[500], 0.24),\r\n          },\r\n        }),\r\n      }),\r\n    };\r\n\r\n    const colorStyle = COLORS.map((color) => ({\r\n      ...(ownerState.color === color && {\r\n        // CONTAINED\r\n        ...(containedVariant && {\r\n          '&:hover': {\r\n            boxShadow: theme.customShadows[color],\r\n          },\r\n        }),\r\n        // SOFT\r\n        ...(softVariant && {\r\n          color: theme.palette[color][isLight ? 'dark' : 'light'],\r\n          backgroundColor: alpha(theme.palette[color].main, 0.16),\r\n          '&:hover': {\r\n            backgroundColor: alpha(theme.palette[color].main, 0.32),\r\n          },\r\n        }),\r\n      }),\r\n    }));\r\n\r\n    const disabledState = {\r\n      '&.Mui-disabled': {\r\n        // SOFT\r\n        ...(softVariant && {\r\n          backgroundColor: theme.palette.action.disabledBackground,\r\n        }),\r\n      },\r\n    };\r\n\r\n    const size = {\r\n      ...(smallSize && {\r\n        height: 30,\r\n        fontSize: 13,\r\n        ...(softVariant && {\r\n          padding: '4px 10px',\r\n        }),\r\n      }),\r\n      ...(largeSize && {\r\n        height: 48,\r\n        fontSize: 15,\r\n        ...(softVariant && {\r\n          padding: '8px 22px',\r\n        }),\r\n      }),\r\n    };\r\n\r\n    return [...colorStyle, defaultStyle, disabledState, size];\r\n  };\r\n\r\n  return {\r\n    MuiButton: {\r\n      defaultProps: {\r\n        disableElevation: true,\r\n      },\r\n\r\n      styleOverrides: {\r\n        root: ({ ownerState }) => rootStyle(ownerState),\r\n      },\r\n    },\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}